#---------------------------------#
#      general configuration      #
#---------------------------------#

os: osx
#osx_image: xcode7.3 # OS X 10.11, https://docs.travis-ci.com/user/reference/osx/
#osx_image: xcode8.3 # OS X 10.12, https://docs.travis-ci.com/user/reference/osx/

compiler: clang

language: cpp

branches:
  only:
  - macos_clang

#---------------------------------#
#    environment configuration    #
#---------------------------------#

env:
  # Global variables
  global:
    # ftp user name, password
    - secure: "tl+D0sXQAHVRKMu5cavYWxAMnFTa2tY6yCdktLX/qJ9ymRvyGYj3ygYq/8CWh5LREoBKjqE5Yzo10+YviH3LhmV1IGXGR0X+kycEhKgChkG8D+Sv2KFhOqE3N//xf6s4p/SgCbr7Ln8tNPm3LgnYS1MeIqTw5wylCPQIWdbKggbO91U7OOCC4t7PJ74xL7U0gxrUt1BZ2iHfyhRLEfVMfkDGcC779KSg57Tmb56mPwNL+RArnwQiVgfmmuOsL9aJpx4thPZ8Km8xAyjlVTa42CH+tFuKvTcWCd9i5q3RHToLrHEf1lNjZj5ERmuxXmwkbvNbEbQ6fuKatY9hWyv9BOgaWycN/h2y4aNQumCmx9KRn77REXPtgScicLO/qAxwBYzrG4KOo25BrpFIOcGtFjFrbTV92OjA595Q+nBs5OfoaBpCoVyvwC24mTtyoWG8+A2Pq64iO/o68EaE3XY3Mg7bDM4V7otgY0zzZsLjE0mLHMTg5FGLKfXmp8VY0MSQMa7Y2sp1idbU9cQvjGlDsw+ALrCXF0/4cIPrMWxwv4Aexx/1x7/y3OppVVFWOafiXB2EcjjNL85flXeemv1h97fIRktAa7rQmKLrC1lJQ01vKO3vWH0mcqkPn3knugOM6/s65lzGuNJIvYH2K5Hf9M9DmDvSKnR8gUROLLmQ8/0="
    - secure: "Sx2jwO+oGU5DFhLY2k62hslEBDIkHVna0RVsPRo5Ccy+u9bpZa/Pb4ifY4hzLNe+ggxHpHUrSpXrNOLyp2+rawBWNu09zbrsHzeOH0ib+gZrJaibczc/z0i535p4QAkEWiZcJrc2gcNdc74CT4MB/zcFcsabP2AD4CJjRw36wBJCBN346dPA5EDqI05Yf8ZAhBq3TXkgYF1F2sQrOweF00vJt41dDwqzqpauSjwUGlX+g7IlZ1qYZKnBl+aAVh8XKLhXF07IlXdoS5Z5dz8QeiHNTNTetFTbqDlyhw6mlylXkpCh3ca1booZQwqUhZySG6h4x8VHAm0gJlrHa1HzQyBPMUcMqkK0FHUV6WI9y2E7hgBQ6+6rku1K3UHGYBgyXd2/NYaEsXqBg6GvOatNfyydAvKOzFyzOv7T9RoBwOOIUBAdON1sXh/1gnHb1HxUGFjQGHeV6tqdIWdC+o4h9YbsXENsgxLqevZAM+ekKyv+k+RHpD0uvQbXtW2bd2dBWpoV80+SJHHd/MDtuioGT0enDBbud5NbtljV2qassWVtlO5OWgLchbVZSPZiynDnbwH5jOzqW+7/8smWGfH6z8CpH50z9uvbXepB4ptZLAIlN98cTMUf6bntpVAdWhV6Ehe2OAyQcDcKzoQiZVaOXQYbX9Nn7o0+ssqJtz9Kxgo="
  # Build matrix
  matrix:
    - CONFIGURATION=release
    #- CONFIGURATION=debug

#---------------------------------#
#      install configuration      #
#---------------------------------#

before_install:
  # Set variables
  - export BRANCH=${TRAVIS_BRANCH}
  - export BUILD_DIR=${TRAVIS_BUILD_DIR}
  - export BUILD_TYPE="$(tr '[:lower:]' '[:upper:]' <<< ${CONFIGURATION:0:1})${CONFIGURATION:1}"
  # Project
  - export PROJECT_NAME=$(basename $TRAVIS_REPO_SLUG)
  - export LATEST_RELEASE_NAME=$(git describe --tags --abbrev=0 --match v*.*.*)
  - export SCRIPTS_DIR=${BUILD_DIR}/Scripts
  - export RELEASE_DIR=${BUILD_DIR}/../Build/${BUILD_TYPE}
  # QtIFW
  - export QTIFW_VERSION="3.0.4"
  - export QTIFW_BASE="QtInstallerFramework-mac-x64"
  - export QTIFW_EXE="/Volumes/${QTIFW_BASE}/${QTIFW_BASE}.app/Contents/MacOS/${QTIFW_BASE}"
  - export QTIFW_URL="https://download.qt.io/official_releases/qt-installer-framework/${QTIFW_VERSION}/${QTIFW_BASE}.dmg"
  - export QTIFW_SCRIPT="${BUILD_DIR}/Scripts/silentinstall.js"
  - export PATH=$PATH:~/Qt/QtIFW-${QTIFW_VERSION}/bin
  # Installer
  - export INSTALLER_DIR=${RELEASE_DIR}/../Installer
  - export INSTALLER=${INSTALLER_DIR}/${PROJECT_NAME}Installer
  - export INSTALLER_EXE=${INSTALLER}.app
  - export INSTALLER_ZIP=${INSTALLER}-macos64.zip
  # Upload
  - export REPO=${INSTALLER_DIR}/${BRANCH}
  - export FTP_DOMAIN=sazonov.org
  - export FTP_RELEASES_DIR=davinci.sazonov.org/releases
  - export FTP_REPOS_DIR=davinci.sazonov.org/repositories/${BRANCH}
  # Print variables
  - sw_vers # macOS version
  - echo ${BRANCH}
  - echo ${CONFIGURATION}
  - echo ${BUILD_TYPE}
  - echo ${BUILD_DIR}
  - echo ${PROJECT_NAME}
  - echo ${LATEST_RELEASE_NAME}
  - echo ${RELEASE_DIR}
  - echo ${SCRIPTS_DIR}
  # Update...
  - brew update

# Install Python, Pip, Qt, QtIFW
install:
  # Python
  #- brew install python3
  - brew upgrade python # upgrade to python3
  - python3 --version
  - pip3 --version
  # Python libs
  - sudo pip3 install ftputil
  - sudo pip3 install yattag
  # 7zip
  - brew install p7zip
  # Qt
  - brew install qt5
  - brew link --force qt5 # Create the symlinks for Qt
  - qmake -v
  # QtIFW
  - curl -L -O ${QTIFW_URL}
  - hdiutil attach "${QTIFW_BASE}.dmg"
  - ${QTIFW_EXE} --script ${QTIFW_SCRIPT}

#---------------------------------#
#       build configuration       #
#---------------------------------#

#before_script:

script:
  # Build
  - python3 ${SCRIPTS_DIR}/makeQtProFiles.py
  - python3 ${SCRIPTS_DIR}/makeBuild.py ${BRANCH}
  # Tests
  - ${RELEASE_DIR}/${PROJECT_NAME}Console --help
  - ${RELEASE_DIR}/${PROJECT_NAME}Tests
  # Deployment
  - python3 ${SCRIPTS_DIR}/makeDeploy.py
  # Installer
  - python3 ${SCRIPTS_DIR}/makeInstaller.py
  # Artifacts
  - "7z a -tzip -bso0 -bsp0 ${INSTALLER_ZIP} ${INSTALLER_EXE}"

#---------------------------------#
#      upload configuration       #
#---------------------------------#

after_success:
  - python3 ${SCRIPTS_DIR}/upload.py ${FTP_DOMAIN} ${FTP_USER} ${FTP_PASSWORD} ${REPO} ${FTP_REPOS_DIR};
  - python3 ${SCRIPTS_DIR}/upload.py ${FTP_DOMAIN} ${FTP_USER} ${FTP_PASSWORD} ${INSTALLER_ZIP} ${FTP_RELEASES_DIR}/${LATEST_RELEASE_NAME};

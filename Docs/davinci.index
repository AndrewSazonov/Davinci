<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE QDOCINDEX>
<INDEX url="http://doc.qt.io/qt-5" title="A Scientific Software for the Visualization and Processing of Single-Crystal Diffraction Data Measured with a Point Detector" version="1.0.1" project="Davinci">
    <namespace threadsafety="unspecified" name="" status="active" access="public" module="davinci">
        <namespace threadsafety="unspecified" name="As" href="as.html" status="active" access="public" location="Colors.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Colors.hpp" lineno="28" module="Davinci" brief="This namespace contains classes used to build the programm">
            <class threadsafety="unspecified" name="Color" fullname="As::Color" href="as-color.html" status="active" access="public" location="Colors.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Colors.hpp" lineno="30" module="Core" brief="Class that is based on the QColor class">
                <function threadsafety="unspecified" name="Color" fullname="As::Color::Color" href="as-color.html#Color" status="active" access="public" location="Colors.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Colors.hpp" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Color()"/>
                <function threadsafety="unspecified" name="Color" fullname="As::Color::Color" href="as-color.html#Color-4" status="active" access="public" location="Colors.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Colors.hpp" lineno="41" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Color(As::GlobalColor color)">
                    <parameter left="As::GlobalColor" right="" name="color" default=""/>
                </function>
                <function threadsafety="unspecified" name="Color" fullname="As::Color::Color" href="as-color.html#Color-2" status="active" access="public" location="Colors.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Colors.hpp" lineno="36" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Color(const Color &amp;color)">
                    <parameter left="const Color &amp;" right="" name="color" default=""/>
                </function>
                <function threadsafety="unspecified" name="Color" fullname="As::Color::Color" href="as-color.html#Color-1" status="active" access="public" location="Colors.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Colors.hpp" lineno="35" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Color(const QColor &amp;color)">
                    <parameter left="const QColor &amp;" right="" name="color" default=""/>
                </function>
                <function threadsafety="unspecified" name="Color" fullname="As::Color::Color" href="as-color.html#Color-3" status="active" access="public" location="Colors.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Colors.hpp" lineno="37" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Color(const int r, const int g, const int b, const int a)">
                    <parameter left="const int" right="" name="r" default=""/>
                    <parameter left="const int" right="" name="g" default=""/>
                    <parameter left="const int" right="" name="b" default=""/>
                    <parameter left="const int" right="" name="a" default="255"/>
                </function>
                <function threadsafety="unspecified" name="~Color" fullname="As::Color::~Color" href="as-color.html#dtor.Color" status="active" access="public" location="Colors.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Colors.hpp" lineno="43" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Color()"/>
                <function threadsafety="unspecified" name="darker" fullname="As::Color::darker" href="as-color.html#darker" status="active" access="public" location="Colors.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Colors.hpp" lineno="46" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Color" signature="Color darker(const int factor) const">
                    <parameter left="const int" right="" name="factor" default=""/>
                </function>
                <function threadsafety="unspecified" name="lighter" fullname="As::Color::lighter" href="as-color.html#lighter" status="active" access="public" location="Colors.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Colors.hpp" lineno="45" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Color" signature="Color lighter(const int factor) const">
                    <parameter left="const int" right="" name="factor" default=""/>
                </function>
                <function threadsafety="unspecified" name="transparenter" fullname="As::Color::transparenter" href="as-color.html#transparenter" status="active" access="public" location="Colors.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Colors.hpp" lineno="47" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Color" signature="Color transparenter(const int alpha) const">
                    <parameter left="const int" right="" name="alpha" default=""/>
                </function>
            </class>
            <enum threadsafety="unspecified" name="GlobalColor" fullname="As::GlobalColor" href="as.html#GlobalColor-enum" status="active" access="public" location="Constants.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Constants.hpp" lineno="112">
                <value name="black" value="0"/>
                <value name="white" value="1"/>
                <value name="whiteTransparent" value="2"/>
                <value name="red" value="3"/>
                <value name="redDark" value="4"/>
                <value name="redDarkVery" value="5"/>
                <value name="redDarkUltra" value="6"/>
                <value name="redLight" value="7"/>
                <value name="redLightVery" value="8"/>
                <value name="redLightUltra" value="9"/>
                <value name="redTransparent" value="10"/>
                <value name="redLightTransparent" value="11"/>
                <value name="green" value="12"/>
                <value name="greenDark" value="13"/>
                <value name="greenDarkVery" value="14"/>
                <value name="greenDarkUltra" value="15"/>
                <value name="greenLight" value="16"/>
                <value name="greenLightVery" value="17"/>
                <value name="greenLightUltra" value="18"/>
                <value name="greenTransparent" value="19"/>
                <value name="greenLightTransparent" value="20"/>
                <value name="blue" value="21"/>
                <value name="blueDark" value="22"/>
                <value name="blueDarkVery" value="23"/>
                <value name="blueDarkUltra" value="24"/>
                <value name="blueLight" value="25"/>
                <value name="blueLightVery" value="26"/>
                <value name="blueLightUltra" value="27"/>
                <value name="blueTransparent" value="28"/>
                <value name="blueLightTransparent" value="29"/>
                <value name="gray" value="30"/>
                <value name="grayDark" value="31"/>
                <value name="grayDarkVery" value="32"/>
                <value name="grayDarkUltra" value="33"/>
                <value name="grayLight" value="34"/>
                <value name="grayLightVery" value="35"/>
                <value name="grayLightUltra" value="36"/>
                <value name="grayTransparent" value="37"/>
                <value name="grayLightTransparent" value="38"/>
                <value name="yellow" value="39"/>
                <value name="yellowDark" value="40"/>
                <value name="yellowLight" value="41"/>
                <value name="yellowLightVery" value="42"/>
                <value name="orange" value="43"/>
                <value name="orangeLight" value="44"/>
            </enum>
            <enum threadsafety="unspecified" name="InputFileType" fullname="As::InputFileType" href="as.html#InputFileType-enum" status="active" access="public" location="Constants.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Constants.hpp" lineno="83">
                <value name="UNKNOWN_FILE" value="0"/>
                <value name="NICOS_DAT" value="1"/>
                <value name="HEIDI_DAT" value="2"/>
                <value name="HEIDI_LOG" value="3"/>
                <value name="POLI_LOG" value="4"/>
                <value name="S6T2_DAT" value="5"/>
            </enum>
            <enum threadsafety="unspecified" name="OutputFileType" fullname="As::OutputFileType" href="as.html#OutputFileType-enum" status="active" access="public" location="Constants.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Constants.hpp" lineno="94">
                <value name="GENERAL_CSV" value="0"/>
                <value name="SHELX_HKL" value="1"/>
                <value name="TBAR_TB" value="2"/>
                <value name="CCSL_DAT" value="3"/>
            </enum>
            <enum threadsafety="unspecified" name="PlotType" fullname="As::PlotType" href="as.html#PlotType-enum" status="active" access="public" location="Constants.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Constants.hpp" lineno="103">
                <value name="Raw" value="0"/>
                <value name="Integrated" value="1"/>
                <value name="Fitted" value="2"/>
                <value name="Excluded" value="3"/>
            </enum>
            <typedef threadsafety="unspecified" name="ScanMap" fullname="As::ScanMap" href="as.html#ScanMap-typedef" status="active" access="public" location="Constants.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Constants.hpp" lineno="52"/>
            <typedef threadsafety="unspecified" name="ScanSectionMap" fullname="As::ScanSectionMap" href="as.html#ScanSectionMap-typedef" status="active" access="public" location="Constants.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Constants.hpp" lineno="51"/>
            <variable threadsafety="unspecified" name="ADD_NUM_PEAK" fullname="As::ADD_NUM_PEAK" href="as.html#ADD_NUM_PEAK-var" status="active" access="public" location="Constants.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Constants.hpp" lineno="79" type="const int = 0" static="false"/>
            <variable threadsafety="unspecified" name="APP_WINDOW_HEIGHT" fullname="As::APP_WINDOW_HEIGHT" href="as.html#APP_WINDOW_HEIGHT-var" status="active" access="public" location="Constants.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Constants.hpp" lineno="72" type="const int = 600" static="false"/>
            <variable threadsafety="unspecified" name="APP_WINDOW_WIDTH" fullname="As::APP_WINDOW_WIDTH" href="as.html#APP_WINDOW_WIDTH-var" status="active" access="public" location="Constants.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Constants.hpp" lineno="71" type="const int = 900" static="false"/>
            <variable threadsafety="unspecified" name="DEBUG_FILE_WIDTH" fullname="As::DEBUG_FILE_WIDTH" href="as.html#DEBUG_FILE_WIDTH-var" status="active" access="public" location="Constants.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Constants.hpp" lineno="57" type="const int = 10" static="false"/>
            <variable threadsafety="unspecified" name="DEBUG_FUNCTION_WIDTH" fullname="As::DEBUG_FUNCTION_WIDTH" href="as.html#DEBUG_FUNCTION_WIDTH-var" status="active" access="public" location="Constants.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Constants.hpp" lineno="59" type="const int = 25" static="false"/>
            <variable threadsafety="unspecified" name="DEBUG_INDEX_WIDTH" fullname="As::DEBUG_INDEX_WIDTH" href="as.html#DEBUG_INDEX_WIDTH-var" status="active" access="public" location="Constants.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Constants.hpp" lineno="56" type="const int = 5" static="false"/>
            <variable threadsafety="unspecified" name="DEBUG_LINE_WIDTH" fullname="As::DEBUG_LINE_WIDTH" href="as.html#DEBUG_LINE_WIDTH-var" status="active" access="public" location="Constants.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Constants.hpp" lineno="58" type="const int = 4" static="false"/>
            <variable threadsafety="unspecified" name="DEBUG_MESSAGE_WIDTH" fullname="As::DEBUG_MESSAGE_WIDTH" href="as.html#DEBUG_MESSAGE_WIDTH-var" status="active" access="public" location="Constants.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Constants.hpp" lineno="61" type="const int = 90" static="false"/>
            <variable threadsafety="unspecified" name="DEBUG_SPACE" fullname="As::DEBUG_SPACE" href="as.html#DEBUG_SPACE-var" status="active" access="public" location="Constants.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Constants.hpp" lineno="62" type="const int = 3" static="false"/>
            <variable threadsafety="unspecified" name="DEBUG_TIME_WIDTH" fullname="As::DEBUG_TIME_WIDTH" href="as.html#DEBUG_TIME_WIDTH-var" status="active" access="public" location="Constants.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Constants.hpp" lineno="60" type="const int = 5" static="false"/>
            <variable threadsafety="unspecified" name="DEBUG_WIDTH" fullname="As::DEBUG_WIDTH" href="as.html#DEBUG_WIDTH-var" status="active" access="public" location="Constants.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Constants.hpp" lineno="63" type="const int = DEBUG_INDEX_WIDTH + DEBUG_SPACE + DEBUG_FILE_WIDTH + DEBUG_SPACE + DEBUG_LINE_WIDTH + DEBUG_SPACE + DEBUG_FUNCTION_WIDTH + DEBUG_SPACE + DEBUG_TIME_WIDTH + DEBUG_SPACE + DEBUG_MESSAGE_WIDTH" static="false"/>
            <variable threadsafety="unspecified" name="MIN_NUM_BKG" fullname="As::MIN_NUM_BKG" href="as.html#MIN_NUM_BKG-var" status="active" access="public" location="Constants.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Constants.hpp" lineno="78" type="const int = 1" static="false"/>
            <variable threadsafety="unspecified" name="MIN_NUM_SCAN" fullname="As::MIN_NUM_SCAN" href="as.html#MIN_NUM_SCAN-var" status="active" access="public" location="Constants.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Constants.hpp" lineno="76" type="const int = 3" static="false"/>
            <variable threadsafety="unspecified" name="MIN_NUM_SKIP" fullname="As::MIN_NUM_SKIP" href="as.html#MIN_NUM_SKIP-var" status="active" access="public" location="Constants.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Constants.hpp" lineno="77" type="const int = 0" static="false"/>
            <variable threadsafety="unspecified" name="MONITOR_NORM" fullname="As::MONITOR_NORM" href="as.html#MONITOR_NORM-var" status="active" access="public" location="Constants.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Constants.hpp" lineno="81" type="const double = 10000." static="false" brief="This variable holds the monitor used for the normsalisation"/>
            <variable threadsafety="unspecified" name="UI_VERTICAL_SPACE_ROWS" fullname="As::UI_VERTICAL_SPACE_ROWS" href="as.html#UI_VERTICAL_SPACE_ROWS-var" status="active" access="public" location="Constants.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Constants.hpp" lineno="74" type="const int = 7" static="false"/>
            <function threadsafety="unspecified" name="ToDateTime" fullname="As::ToDateTime" href="as.html#ToDateTime" status="active" access="public" location="Functions.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Functions.hpp" lineno="44" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QDateTime" signature="QDateTime ToDateTime(const QString &amp;string)">
                <parameter left="const QString &amp;" right="" name="string" default=""/>
            </function>
            <function threadsafety="unspecified" name="DebugHeader" fullname="As::DebugHeader" href="as.html#DebugHeader" status="active" access="public" location="Functions.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Functions.hpp" lineno="59" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString DebugHeader(const int skipLines, const QChar fillChar)">
                <parameter left="const int" right="" name="skipLines" default=""/>
                <parameter left="const QChar" right="" name="fillChar" default=""/>
            </function>
            <function threadsafety="unspecified" name="FormatToPathWithName" fullname="As::FormatToPathWithName" href="as.html#FormatToPathWithName" status="active" access="public" location="Functions.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Functions.hpp" lineno="73" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString FormatToPathWithName(const QString &amp;baseNameFirst, const QString &amp;baseNameLast, const QString &amp;absolutePathLast)">
                <parameter left="const QString &amp;" right="" name="baseNameFirst" default=""/>
                <parameter left="const QString &amp;" right="" name="baseNameLast" default=""/>
                <parameter left="const QString &amp;" right="" name="absolutePathLast" default=""/>
            </function>
            <function threadsafety="unspecified" name="ToHumanDate" fullname="As::ToHumanDate" href="as.html#ToHumanDate" status="active" access="public" location="Functions.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Functions.hpp" lineno="43" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString ToHumanDate(const QString &amp;string)">
                <parameter left="const QString &amp;" right="" name="string" default=""/>
            </function>
            <function threadsafety="unspecified" name="ToString" fullname="As::ToString" href="as.html#ToString" status="active" access="public" location="Functions.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Functions.hpp" lineno="45" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString ToString(const QString &amp;string)">
                <parameter left="const QString &amp;" right="" name="string" default=""/>
            </function>
            <function threadsafety="unspecified" name="ToStringList" fullname="As::ToStringList" href="as.html#ToStringList" status="active" access="public" location="Functions.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Functions.hpp" lineno="46" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QStringList" signature="QStringList ToStringList(const QString &amp;string)">
                <parameter left="const QString &amp;" right="" name="string" default=""/>
            </function>
            <function threadsafety="unspecified" name="ToRealVector" fullname="As::ToRealVector" href="as.html#ToRealVector" status="active" access="public" location="Functions.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Functions.hpp" lineno="42" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QVector&lt;qreal&gt;" signature="QVector&lt;qreal&gt; ToRealVector(const QString &amp;string)">
                <parameter left="const QString &amp;" right="" name="string" default=""/>
            </function>
            <function threadsafety="unspecified" name="FormatString" fullname="As::FormatString" href="as.html#FormatString" status="active" access="public" location="Functions.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Functions.hpp" lineno="48" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const QString" signature="const QString FormatString(const QString &amp;string, const QString &amp;format)">
                <parameter left="const QString &amp;" right="" name="string" default=""/>
                <parameter left="const QString &amp;" right="" name="format" default=""/>
            </function>
            <function threadsafety="unspecified" name="FormatStringToRange" fullname="As::FormatStringToRange" href="as.html#FormatStringToRange" status="active" access="public" location="Functions.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Functions.hpp" lineno="52" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const QString" signature="const QString FormatStringToRange(const QString &amp;string, const QString &amp;format)">
                <parameter left="const QString &amp;" right="" name="string" default=""/>
                <parameter left="const QString &amp;" right="" name="format" default=""/>
            </function>
            <function threadsafety="unspecified" name="FormatStringToText" fullname="As::FormatStringToText" href="as.html#FormatStringToText" status="active" access="public" location="Functions.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Functions.hpp" lineno="50" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const QString" signature="const QString FormatStringToText(const QString &amp;string, const QString &amp;format)">
                <parameter left="const QString &amp;" right="" name="string" default=""/>
                <parameter left="const QString &amp;" right="" name="format" default=""/>
            </function>
            <function threadsafety="unspecified" name="SidebarWidth" fullname="As::SidebarWidth" href="as.html#SidebarWidth" status="active" access="public" location="Functions.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Functions.hpp" lineno="55" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int SidebarWidth(const QFont &amp;font)">
                <parameter left="const QFont &amp;" right="" name="font" default=""/>
            </function>
            <function threadsafety="unspecified" name="StringVersionToInt" fullname="As::StringVersionToInt" href="as.html#StringVersionToInt" status="active" access="public" location="Functions.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Functions.hpp" lineno="71" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int StringVersionToInt(QString version)">
                <parameter left="QString" right="" name="version" default=""/>
            </function>
            <function threadsafety="unspecified" name="Sqr" fullname="As::Sqr" href="as.html#Sqr" status="active" access="public" location="Functions.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Functions.hpp" lineno="39" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="qreal" signature="qreal Sqr(const qreal v)">
                <parameter left="const qreal" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="ToMainAngularRange" fullname="As::ToMainAngularRange" href="as.html#ToMainAngularRange" status="active" access="public" location="Functions.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Functions.hpp" lineno="40" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="qreal" signature="qreal ToMainAngularRange(const qreal angle)">
                <parameter left="const qreal" right="" name="angle" default=""/>
            </function>
            <function threadsafety="unspecified" name="DetailedMessageOutput" fullname="As::DetailedMessageOutput" href="as.html#DetailedMessageOutput" status="active" access="public" location="Functions.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Functions.hpp" lineno="67" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void DetailedMessageOutput(QtMsgType type, const QMessageLogContext &amp;context, const QString &amp;msg)">
                <parameter left="QtMsgType" right="" name="type" default=""/>
                <parameter left="const QMessageLogContext &amp;" right="" name="context" default=""/>
                <parameter left="const QString &amp;" right="" name="msg" default=""/>
            </function>
            <function threadsafety="unspecified" name="EmptyMessageOutput" fullname="As::EmptyMessageOutput" href="as.html#EmptyMessageOutput" status="active" access="public" location="Functions.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Functions.hpp" lineno="64" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void EmptyMessageOutput(QtMsgType type, const QMessageLogContext &amp;, const QString &amp;msg)">
                <parameter left="QtMsgType" right="" name="type" default=""/>
                <parameter left="const QMessageLogContext &amp;" right="" name="" default=""/>
                <parameter left="const QString &amp;" right="" name="msg" default=""/>
            </function>
            <function threadsafety="unspecified" name="NoMessageOutput" fullname="As::NoMessageOutput" href="as.html#NoMessageOutput" status="active" access="public" location="Functions.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Functions.hpp" lineno="61" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void NoMessageOutput(QtMsgType type, const QMessageLogContext &amp;, const QString &amp;)">
                <parameter left="QtMsgType" right="" name="type" default=""/>
                <parameter left="const QMessageLogContext &amp;" right="" name="" default=""/>
                <parameter left="const QString &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="SetDebugOutputFormat" fullname="As::SetDebugOutputFormat" href="as.html#SetDebugOutputFormat" status="active" access="public" location="Functions.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Functions.hpp" lineno="57" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void SetDebugOutputFormat(const bool isDebugMode)">
                <parameter left="const bool" right="" name="isDebugMode" default=""/>
            </function>
            <class threadsafety="unspecified" name="Line" fullname="As::Line" href="as-line.html" status="active" access="public" location="Line.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/Line.hpp" lineno="28" module="DataTypes" brief="Geometrical line build by 2 points with given coordinates">
                <function threadsafety="unspecified" name="Line" fullname="As::Line::Line" href="as-line.html#Line" status="active" access="public" location="Line.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/Line.hpp" lineno="32" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Line()"/>
                <function threadsafety="unspecified" name="Line" fullname="As::Line::Line" href="as-line.html#Line-1" status="active" access="public" location="Line.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/Line.hpp" lineno="33" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Line(const qreal x1, const qreal y1, const qreal x2, const qreal y2, const qreal esdX1, const qreal esdY1, const qreal esdX2, const qreal esdY2)">
                    <parameter left="const qreal" right="" name="x1" default=""/>
                    <parameter left="const qreal" right="" name="y1" default=""/>
                    <parameter left="const qreal" right="" name="x2" default=""/>
                    <parameter left="const qreal" right="" name="y2" default=""/>
                    <parameter left="const qreal" right="" name="esdX1" default="0."/>
                    <parameter left="const qreal" right="" name="esdY1" default="0."/>
                    <parameter left="const qreal" right="" name="esdX2" default="0."/>
                    <parameter left="const qreal" right="" name="esdY2" default="0."/>
                </function>
                <function threadsafety="unspecified" name="~Line" fullname="As::Line::~Line" href="as-line.html#dtor.Line" status="active" access="public" location="Line.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/Line.hpp" lineno="42" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Line()"/>
                <function threadsafety="unspecified" name="esdXForY" fullname="As::Line::esdXForY" href="as-line.html#esdXForY" status="active" access="public" location="Line.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/Line.hpp" lineno="46" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="qreal" signature="qreal esdXForY(const qreal y, const qreal esdY) const">
                    <parameter left="const qreal" right="" name="y" default=""/>
                    <parameter left="const qreal" right="" name="esdY" default=""/>
                </function>
                <function threadsafety="unspecified" name="esdYForY" fullname="As::Line::esdYForY" href="as-line.html#esdYForY" status="active" access="public" location="Line.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/Line.hpp" lineno="45" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="qreal" signature="qreal esdYForY(const qreal y) const">
                    <parameter left="const qreal" right="" name="y" default=""/>
                </function>
                <function threadsafety="unspecified" name="xForY" fullname="As::Line::xForY" href="as-line.html#xForY" status="active" access="public" location="Line.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/Line.hpp" lineno="44" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="qreal" signature="qreal xForY(const qreal y) const">
                    <parameter left="const qreal" right="" name="y" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="RealArray" fullname="As::RealArray" href="as-realarray.html" status="active" access="public" location="RealArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealArray.hpp" lineno="29" module="DataTypes" brief="Base class that provides an array of the QVector&lt;qreal&gt; type, which takes just the required functions of QVector">
                <function threadsafety="unspecified" name="toQString" fullname="As::RealArray::toQString" href="as-realarray.html#toQString" status="active" access="public" location="RealArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealArray.hpp" lineno="51" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString toQString()"/>
                <function threadsafety="unspecified" name="operator=" fullname="As::RealArray::operator=" href="as-realarray.html#operator-eq" status="active" access="public" location="RealArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealArray.hpp" lineno="43" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QVector&lt;qreal&gt; &amp;" signature="QVector&lt;qreal&gt; &amp; operator=(const QVector&lt;qreal&gt; &amp;other)">
                    <parameter left="const QVector&lt;qreal&gt; &amp;" right="" name="other" default=""/>
                </function>
                <function threadsafety="unspecified" name="RealArray" fullname="As::RealArray::RealArray" href="as-realarray.html#RealArray" status="active" access="public" location="RealArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealArray.hpp" lineno="33" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="RealArray()"/>
                <function threadsafety="unspecified" name="RealArray" fullname="As::RealArray::RealArray" href="as-realarray.html#RealArray-1" status="active" access="public" location="RealArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealArray.hpp" lineno="34" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="RealArray(const As::RealArray &amp;other)">
                    <parameter left="const As::RealArray &amp;" right="" name="other" default=""/>
                </function>
                <function threadsafety="unspecified" name="RealArray" fullname="As::RealArray::RealArray" href="as-realarray.html#RealArray-2" status="active" access="public" location="RealArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealArray.hpp" lineno="35" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="RealArray(const QVector&lt;qreal&gt; &amp;other)">
                    <parameter left="const QVector&lt;qreal&gt; &amp;" right="" name="other" default=""/>
                </function>
                <function threadsafety="unspecified" name="RealArray" fullname="As::RealArray::RealArray" href="as-realarray.html#RealArray-3" status="active" access="public" location="RealArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealArray.hpp" lineno="36" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="RealArray(const int size, const qreal defaultValue)">
                    <parameter left="const int" right="" name="size" default=""/>
                    <parameter left="const qreal" right="" name="defaultValue" default="0.0"/>
                </function>
                <function threadsafety="unspecified" name="operator[]" fullname="As::RealArray::operator[]" href="as-realarray.html#operator-5b-5d" status="active" access="public" location="RealArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealArray.hpp" lineno="41" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="qreal &amp;" signature="qreal &amp; operator[](const int i)">
                    <parameter left="const int" right="" name="i" default=""/>
                </function>
                <function threadsafety="unspecified" name="append" fullname="As::RealArray::append" href="as-realarray.html#append" status="active" access="public" location="RealArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealArray.hpp" lineno="48" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void append(const qreal value)">
                    <parameter left="const qreal" right="" name="value" default=""/>
                </function>
                <function threadsafety="unspecified" name="prepend" fullname="As::RealArray::prepend" href="as-realarray.html#prepend" status="active" access="public" location="RealArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealArray.hpp" lineno="49" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void prepend(const qreal value)">
                    <parameter left="const qreal" right="" name="value" default=""/>
                </function>
                <function threadsafety="unspecified" name="resize" fullname="As::RealArray::resize" href="as-realarray.html#resize" status="active" access="protected" location="RealArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealArray.hpp" lineno="57" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void resize(const int size)">
                    <parameter left="const int" right="" name="size" default=""/>
                </function>
                <function threadsafety="unspecified" name="set" fullname="As::RealArray::set" href="as-realarray.html#set" status="active" access="public" location="RealArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealArray.hpp" lineno="40" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void set(const QVector&lt;qreal&gt; &amp;other)">
                    <parameter left="const QVector&lt;qreal&gt; &amp;" right="" name="other" default=""/>
                </function>
                <function threadsafety="unspecified" name="~RealArray" fullname="As::RealArray::~RealArray" href="as-realarray.html#dtor.RealArray" status="active" access="public" location="RealArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealArray.hpp" lineno="38" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~RealArray()"/>
                <function threadsafety="unspecified" name="mid" fullname="As::RealArray::mid" href="as-realarray.html#mid" status="active" access="public" location="RealArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealArray.hpp" lineno="54" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QVector&lt;qreal&gt;" signature="QVector&lt;qreal&gt; mid(const int pos, const int length) const">
                    <parameter left="const int" right="" name="pos" default=""/>
                    <parameter left="const int" right="" name="length" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="operator+" fullname="As::RealArray::operator+" href="as-realarray.html#operator-2b" status="active" access="public" location="RealArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealArray.hpp" lineno="44" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="RealArray" signature="RealArray operator+(const As::RealArray &amp;other) const">
                    <parameter left="const As::RealArray &amp;" right="" name="other" default=""/>
                </function>
                <function threadsafety="unspecified" name="isEmpty" fullname="As::RealArray::isEmpty" href="as-realarray.html#isEmpty" status="active" access="public" location="RealArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealArray.hpp" lineno="50" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isEmpty() const"/>
                <function threadsafety="unspecified" name="operator==" fullname="As::RealArray::operator==" href="as-realarray.html#operator-eq-eq" status="active" access="public" location="RealArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealArray.hpp" lineno="45" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator==(const As::RealArray &amp;other) const">
                    <parameter left="const As::RealArray &amp;" right="" name="other" default=""/>
                </function>
                <function threadsafety="unspecified" name="toQString" fullname="As::RealArray::toQString" href="as-realarray.html#toQString-1" status="active" access="public" location="RealArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealArray.hpp" lineno="52" virtual="non" meta="plain" const="true" static="false" overload="true" delete="false" default="false" final="false" override="false" overload-number="1" type="const QString" signature="const QString toQString() const"/>
                <function threadsafety="unspecified" name="toQVector" fullname="As::RealArray::toQVector" href="as-realarray.html#toQVector" status="active" access="public" location="RealArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealArray.hpp" lineno="53" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const QVector&lt;qreal&gt;" signature="const QVector&lt;qreal&gt; toQVector() const"/>
                <function threadsafety="unspecified" name="operator[]" fullname="As::RealArray::operator[]" href="as-realarray.html#operator-5b-5d-1" status="active" access="public" location="RealArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealArray.hpp" lineno="42" virtual="non" meta="plain" const="true" static="false" overload="true" delete="false" default="false" final="false" override="false" overload-number="1" type="const qreal &amp;" signature="const qreal &amp; operator[](const int i) const">
                    <parameter left="const int" right="" name="i" default=""/>
                </function>
                <function threadsafety="unspecified" name="begin" fullname="As::RealArray::begin" href="as-realarray.html#begin" status="active" access="protected" location="RealArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealArray.hpp" lineno="58" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const qreal *" signature="const qreal * begin() const"/>
                <function threadsafety="unspecified" name="end" fullname="As::RealArray::end" href="as-realarray.html#end" status="active" access="protected" location="RealArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealArray.hpp" lineno="59" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const qreal *" signature="const qreal * end() const"/>
                <function threadsafety="unspecified" name="indexOf" fullname="As::RealArray::indexOf" href="as-realarray.html#indexOf" status="active" access="public" location="RealArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealArray.hpp" lineno="47" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int indexOf(const qreal value) const">
                    <parameter left="const qreal" right="" name="value" default=""/>
                </function>
                <function threadsafety="unspecified" name="size" fullname="As::RealArray::size" href="as-realarray.html#size" status="active" access="public" location="RealArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealArray.hpp" lineno="46" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int size() const"/>
            </class>
            <class threadsafety="unspecified" name="RealMatrix9" fullname="As::RealMatrix9" href="as-realmatrix9.html" status="active" access="public" location="RealMatrix9.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealMatrix9.hpp" lineno="31" bases="As::RealArray" module="DataTypes" brief="Class that provides an array of the QVector&lt;qreal&gt; type with just 9 elements (corresponds to the 3x3 array), which is extended with additional functions">
                <function threadsafety="unspecified" name="RealMatrix9" fullname="As::RealMatrix9::RealMatrix9" href="as-realmatrix9.html#RealMatrix9" status="active" access="public" location="RealMatrix9.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealMatrix9.hpp" lineno="35" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="RealMatrix9()"/>
                <function threadsafety="unspecified" name="RealMatrix9" fullname="As::RealMatrix9::RealMatrix9" href="as-realmatrix9.html#RealMatrix9-2" status="active" access="public" location="RealMatrix9.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealMatrix9.hpp" lineno="39" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="RealMatrix9(const QString &amp;string)">
                    <parameter left="const QString &amp;" right="" name="string" default=""/>
                </function>
                <function threadsafety="unspecified" name="RealMatrix9" fullname="As::RealMatrix9::RealMatrix9" href="as-realmatrix9.html#RealMatrix9-1" status="active" access="public" location="RealMatrix9.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealMatrix9.hpp" lineno="36" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="RealMatrix9(const qreal a1, const qreal a2, const qreal a3, const qreal b1, const qreal b2, const qreal b3, const qreal c1, const qreal c2, const qreal c3)">
                    <parameter left="const qreal" right="" name="a1" default=""/>
                    <parameter left="const qreal" right="" name="a2" default=""/>
                    <parameter left="const qreal" right="" name="a3" default=""/>
                    <parameter left="const qreal" right="" name="b1" default=""/>
                    <parameter left="const qreal" right="" name="b2" default=""/>
                    <parameter left="const qreal" right="" name="b3" default=""/>
                    <parameter left="const qreal" right="" name="c1" default=""/>
                    <parameter left="const qreal" right="" name="c2" default=""/>
                    <parameter left="const qreal" right="" name="c3" default=""/>
                </function>
                <function threadsafety="unspecified" name="set" fullname="As::RealMatrix9::set" href="as-realmatrix9.html#set-1" status="active" access="public" location="RealMatrix9.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealMatrix9.hpp" lineno="44" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void set(const QString &amp;string)">
                    <parameter left="const QString &amp;" right="" name="string" default=""/>
                </function>
                <function threadsafety="unspecified" name="set" fullname="As::RealMatrix9::set" href="as-realmatrix9.html#set" status="active" access="public" location="RealMatrix9.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealMatrix9.hpp" lineno="43" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void set(const QVector&lt;qreal&gt; &amp;other)">
                    <parameter left="const QVector&lt;qreal&gt; &amp;" right="" name="other" default=""/>
                </function>
                <function threadsafety="unspecified" name="set" fullname="As::RealMatrix9::set" href="as-realmatrix9.html#set-2" status="active" access="public" location="RealMatrix9.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealMatrix9.hpp" lineno="45" virtual="non" meta="plain" const="false" static="false" overload="true" delete="false" default="false" final="false" override="false" overload-number="2" type="void" signature="void set(const qreal a1, const qreal a2, const qreal a3, const qreal b1, const qreal b2, const qreal b3, const qreal c1, const qreal c2, const qreal c3)">
                    <parameter left="const qreal" right="" name="a1" default=""/>
                    <parameter left="const qreal" right="" name="a2" default=""/>
                    <parameter left="const qreal" right="" name="a3" default=""/>
                    <parameter left="const qreal" right="" name="b1" default=""/>
                    <parameter left="const qreal" right="" name="b2" default=""/>
                    <parameter left="const qreal" right="" name="b3" default=""/>
                    <parameter left="const qreal" right="" name="c1" default=""/>
                    <parameter left="const qreal" right="" name="c2" default=""/>
                    <parameter left="const qreal" right="" name="c3" default=""/>
                </function>
                <function threadsafety="unspecified" name="~RealMatrix9" fullname="As::RealMatrix9::~RealMatrix9" href="as-realmatrix9.html#dtor.RealMatrix9" status="active" access="public" location="RealMatrix9.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealMatrix9.hpp" lineno="41" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~RealMatrix9()"/>
                <function threadsafety="unspecified" name="inv" fullname="As::RealMatrix9::inv" href="as-realmatrix9.html#inv" status="active" access="public" location="RealMatrix9.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealMatrix9.hpp" lineno="50" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const RealMatrix9" signature="const RealMatrix9 inv() const"/>
                <function threadsafety="unspecified" name="trans" fullname="As::RealMatrix9::trans" href="as-realmatrix9.html#trans" status="active" access="public" location="RealMatrix9.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealMatrix9.hpp" lineno="49" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const RealMatrix9" signature="const RealMatrix9 trans() const"/>
                <function threadsafety="unspecified" name="det" fullname="As::RealMatrix9::det" href="as-realmatrix9.html#det" status="active" access="public" location="RealMatrix9.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealMatrix9.hpp" lineno="48" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="qreal" signature="qreal det() const"/>
            </class>
            <class threadsafety="unspecified" name="RealVector" fullname="As::RealVector" href="as-realvector.html" status="active" access="public" location="RealVector.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealVector.hpp" lineno="31" bases="As::RealArray" module="DataTypes" brief="Class that provides an array of the QVector&lt;qreal&gt; type, which is extended with additional functions">
                <function threadsafety="unspecified" name="RealVector" fullname="As::RealVector::RealVector" href="as-realvector.html#RealVector" status="active" access="public" location="RealVector.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealVector.hpp" lineno="35" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="RealVector()"/>
                <function threadsafety="unspecified" name="RealVector" fullname="As::RealVector::RealVector" href="as-realvector.html#RealVector-2" status="active" access="public" location="RealVector.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealVector.hpp" lineno="37" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="RealVector(const As::RealArray &amp;other)">
                    <parameter left="const As::RealArray &amp;" right="" name="other" default=""/>
                </function>
                <function threadsafety="unspecified" name="RealVector" fullname="As::RealVector::RealVector" href="as-realvector.html#RealVector-1" status="active" access="public" location="RealVector.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealVector.hpp" lineno="36" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="RealVector(const As::RealVector &amp;other)">
                    <parameter left="const As::RealVector &amp;" right="" name="other" default=""/>
                </function>
                <function threadsafety="unspecified" name="RealVector" fullname="As::RealVector::RealVector" href="as-realvector.html#RealVector-5" status="active" access="public" location="RealVector.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealVector.hpp" lineno="40" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="RealVector(const QString &amp;string)">
                    <parameter left="const QString &amp;" right="" name="string" default=""/>
                </function>
                <function threadsafety="unspecified" name="RealVector" fullname="As::RealVector::RealVector" href="as-realvector.html#RealVector-3" status="active" access="public" location="RealVector.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealVector.hpp" lineno="38" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="RealVector(const QVector&lt;qreal&gt; &amp;other)">
                    <parameter left="const QVector&lt;qreal&gt; &amp;" right="" name="other" default=""/>
                </function>
                <function threadsafety="unspecified" name="RealVector" fullname="As::RealVector::RealVector" href="as-realvector.html#RealVector-4" status="active" access="public" location="RealVector.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealVector.hpp" lineno="39" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="RealVector(const int size, const qreal defaultValue)">
                    <parameter left="const int" right="" name="size" default=""/>
                    <parameter left="const qreal" right="" name="defaultValue" default=""/>
                </function>
                <function threadsafety="unspecified" name="~RealVector" fullname="As::RealVector::~RealVector" href="as-realvector.html#dtor.RealVector" status="active" access="public" location="RealVector.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealVector.hpp" lineno="42" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~RealVector()"/>
                <function threadsafety="unspecified" name="normalizeBy" fullname="As::RealVector::normalizeBy" href="as-realvector.html#normalizeBy" status="active" access="public" location="RealVector.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealVector.hpp" lineno="59" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="RealVector" signature="RealVector normalizeBy(const As::RealVector &amp;other) const">
                    <parameter left="const As::RealVector &amp;" right="" name="other" default=""/>
                </function>
                <function threadsafety="unspecified" name="reverse" fullname="As::RealVector::reverse" href="as-realvector.html#reverse" status="active" access="public" location="RealVector.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealVector.hpp" lineno="58" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="RealVector" signature="RealVector reverse() const"/>
                <function threadsafety="unspecified" name="simplified" fullname="As::RealVector::simplified" href="as-realvector.html#simplified" status="active" access="public" location="RealVector.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealVector.hpp" lineno="61" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="RealVector" signature="RealVector simplified() const"/>
                <function threadsafety="unspecified" name="isZero" fullname="As::RealVector::isZero" href="as-realvector.html#isZero" status="active" access="public" location="RealVector.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealVector.hpp" lineno="57" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isZero() const"/>
                <function threadsafety="unspecified" name="sqrt" fullname="As::RealVector::sqrt" href="as-realvector.html#sqrt" status="active" access="public" location="RealVector.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealVector.hpp" lineno="60" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const RealVector" signature="const RealVector sqrt() const"/>
                <function threadsafety="unspecified" name="indexOfMax" fullname="As::RealVector::indexOfMax" href="as-realvector.html#indexOfMax" status="active" access="public" location="RealVector.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealVector.hpp" lineno="55" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int indexOfMax() const"/>
                <function threadsafety="unspecified" name="indexOfMin" fullname="As::RealVector::indexOfMin" href="as-realvector.html#indexOfMin" status="active" access="public" location="RealVector.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealVector.hpp" lineno="56" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int indexOfMin() const"/>
                <function threadsafety="unspecified" name="max" fullname="As::RealVector::max" href="as-realvector.html#max" status="active" access="public" location="RealVector.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealVector.hpp" lineno="48" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="qreal" signature="qreal max() const"/>
                <function threadsafety="unspecified" name="mean" fullname="As::RealVector::mean" href="as-realvector.html#mean" status="active" access="public" location="RealVector.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealVector.hpp" lineno="51" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="qreal" signature="qreal mean() const"/>
                <function threadsafety="unspecified" name="middle" fullname="As::RealVector::middle" href="as-realvector.html#middle" status="active" access="public" location="RealVector.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealVector.hpp" lineno="53" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="qreal" signature="qreal middle() const"/>
                <function threadsafety="unspecified" name="min" fullname="As::RealVector::min" href="as-realvector.html#min" status="active" access="public" location="RealVector.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealVector.hpp" lineno="47" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="qreal" signature="qreal min() const"/>
                <function threadsafety="unspecified" name="range" fullname="As::RealVector::range" href="as-realvector.html#range" status="active" access="public" location="RealVector.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealVector.hpp" lineno="52" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="qreal" signature="qreal range() const"/>
                <function threadsafety="unspecified" name="step" fullname="As::RealVector::step" href="as-realvector.html#step" status="active" access="public" location="RealVector.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealVector.hpp" lineno="54" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="qreal" signature="qreal step() const"/>
                <function threadsafety="unspecified" name="sum" fullname="As::RealVector::sum" href="as-realvector.html#sum" status="active" access="public" location="RealVector.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealVector.hpp" lineno="49" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="qreal" signature="qreal sum() const"/>
                <function threadsafety="unspecified" name="sumSqr" fullname="As::RealVector::sumSqr" href="as-realvector.html#sumSqr" status="active" access="public" location="RealVector.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealVector.hpp" lineno="50" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="qreal" signature="qreal sumSqr() const"/>
            </class>
            <class threadsafety="unspecified" name="String" fullname="As::String" href="as-string.html" status="active" access="public" location="String.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/String.hpp" lineno="31" module="DataTypes" brief="Class that provides a string of the QString type, which takes just the required functions of QString">
                <function threadsafety="unspecified" name="operator=" fullname="As::String::operator=" href="as-string.html#operator-eq" status="active" access="public" location="String.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/String.hpp" lineno="42" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString &amp;" signature="QString &amp; operator=(const QString &amp;other)">
                    <parameter left="const QString &amp;" right="" name="other" default=""/>
                </function>
                <function threadsafety="unspecified" name="remove" fullname="As::String::remove" href="as-string.html#remove" status="active" access="public" location="String.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/String.hpp" lineno="47" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString &amp;" signature="QString &amp; remove(const QRegExp &amp;subString)">
                    <parameter left="const QRegExp &amp;" right="" name="subString" default=""/>
                </function>
                <function threadsafety="unspecified" name="replace" fullname="As::String::replace" href="as-string.html#replace" status="active" access="public" location="String.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/String.hpp" lineno="46" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString &amp;" signature="QString &amp; replace(const QRegExp &amp;before, const QString &amp;after)">
                    <parameter left="const QRegExp &amp;" right="" name="before" default=""/>
                    <parameter left="const QString &amp;" right="" name="after" default=""/>
                </function>
                <function threadsafety="unspecified" name="String" fullname="As::String::String" href="as-string.html#String" status="active" access="public" location="String.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/String.hpp" lineno="35" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="String()"/>
                <function threadsafety="unspecified" name="String" fullname="As::String::String" href="as-string.html#String-1" status="active" access="public" location="String.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/String.hpp" lineno="36" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="String(const QString &amp;other)">
                    <parameter left="const QString &amp;" right="" name="other" default=""/>
                </function>
                <function threadsafety="unspecified" name="append" fullname="As::String::append" href="as-string.html#append" status="active" access="public" location="String.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/String.hpp" lineno="45" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void append(const QString &amp;other)">
                    <parameter left="const QString &amp;" right="" name="other" default=""/>
                </function>
                <function threadsafety="unspecified" name="~String" fullname="As::String::~String" href="as-string.html#dtor.String" status="active" access="public" location="String.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/String.hpp" lineno="38" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~String()"/>
                <function threadsafety="unspecified" name="mid" fullname="As::String::mid" href="as-string.html#mid" status="active" access="public" location="String.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/String.hpp" lineno="48" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString mid(const int position, const int n) const">
                    <parameter left="const int" right="" name="position" default=""/>
                    <parameter left="const int" right="" name="n" default=""/>
                </function>
                <function threadsafety="unspecified" name="toQString" fullname="As::String::toQString" href="as-string.html#toQString" status="active" access="public" location="String.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/String.hpp" lineno="49" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString toQString() const"/>
                <function threadsafety="unspecified" name="startsWith" fullname="As::String::startsWith" href="as-string.html#startsWith" status="active" access="public" location="String.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/String.hpp" lineno="44" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool startsWith(const QString &amp;subString) const">
                    <parameter left="const QString &amp;" right="" name="subString" default=""/>
                </function>
                <function threadsafety="unspecified" name="size" fullname="As::String::size" href="as-string.html#size" status="active" access="public" location="String.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/String.hpp" lineno="43" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int size() const"/>
            </class>
            <class threadsafety="unspecified" name="StringParser" fullname="As::StringParser" href="as-stringparser.html" status="active" access="public" location="StringParser.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/StringParser.hpp" lineno="31" bases="As::String" module="DataTypes" brief="Class based on the As::String that provides a string parser">
                <function threadsafety="unspecified" name="parseNumberNearText" fullname="As::StringParser::parseNumberNearText" href="as-stringparser.html#parseNumberNearText" status="active" access="public" location="StringParser.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/StringParser.hpp" lineno="80" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString parseNumberNearText(const QString &amp;text, const QString &amp;order)">
                    <parameter left="const QString &amp;" right="" name="text" default=""/>
                    <parameter left="const QString &amp;" right="" name="order" default=""/>
                </function>
                <function threadsafety="unspecified" name="parseNumberNearText" fullname="As::StringParser::parseNumberNearText" href="as-stringparser.html#parseNumberNearText-1" status="active" access="public" location="StringParser.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/StringParser.hpp" lineno="82" virtual="non" meta="plain" const="false" static="false" overload="true" delete="false" default="false" final="false" override="false" overload-number="1" type="QString" signature="QString parseNumberNearText(const QString &amp;text, const QString &amp;order, const QStringList &amp;list)">
                    <parameter left="const QString &amp;" right="" name="text" default=""/>
                    <parameter left="const QString &amp;" right="" name="order" default=""/>
                    <parameter left="const QStringList &amp;" right="" name="list" default=""/>
                </function>
                <function threadsafety="unspecified" name="parsePattern" fullname="As::StringParser::parsePattern" href="as-stringparser.html#parsePattern" status="active" access="public" location="StringParser.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/StringParser.hpp" lineno="78" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString parsePattern(const QString &amp;pattern, const QString &amp;del)">
                    <parameter left="const QString &amp;" right="" name="pattern" default=""/>
                    <parameter left="const QString &amp;" right="" name="del" default="QString()"/>
                </function>
                <function threadsafety="unspecified" name="parseString" fullname="As::StringParser::parseString" href="as-stringparser.html#parseString-2" status="active" access="public" location="StringParser.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/StringParser.hpp" lineno="66" virtual="non" meta="plain" const="false" static="false" overload="true" delete="false" default="false" final="false" override="false" overload-number="2" type="QString" signature="QString parseString(const QString &amp;text, const QString &amp;type, const QStringList &amp;list, const int skip, const int grab)">
                    <parameter left="const QString &amp;" right="" name="text" default=""/>
                    <parameter left="const QString &amp;" right="" name="type" default=""/>
                    <parameter left="const QStringList &amp;" right="" name="list" default=""/>
                    <parameter left="const int" right="" name="skip" default="0"/>
                    <parameter left="const int" right="" name="grab" default="1"/>
                </function>
                <function threadsafety="unspecified" name="parseString" fullname="As::StringParser::parseString" href="as-stringparser.html#parseString-3" status="active" access="public" location="StringParser.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/StringParser.hpp" lineno="71" virtual="non" meta="plain" const="false" static="false" overload="true" delete="false" default="false" final="false" override="false" overload-number="3" type="QString" signature="QString parseString(const QString &amp;textFrom, const QString &amp;textTo, const QString &amp;type, const QStringList &amp;list, const int skip)">
                    <parameter left="const QString &amp;" right="" name="textFrom" default=""/>
                    <parameter left="const QString &amp;" right="" name="textTo" default=""/>
                    <parameter left="const QString &amp;" right="" name="type" default=""/>
                    <parameter left="const QStringList &amp;" right="" name="list" default=""/>
                    <parameter left="const int" right="" name="skip" default="0"/>
                </function>
                <function threadsafety="unspecified" name="parseString" fullname="As::StringParser::parseString" href="as-stringparser.html#parseString" status="active" access="public" location="StringParser.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/StringParser.hpp" lineno="59" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString parseString(const QString &amp;type, const QString &amp;del)">
                    <parameter left="const QString &amp;" right="" name="type" default=""/>
                    <parameter left="const QString &amp;" right="" name="del" default="QString()"/>
                </function>
                <function threadsafety="unspecified" name="parseString" fullname="As::StringParser::parseString" href="as-stringparser.html#parseString-1" status="active" access="public" location="StringParser.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/StringParser.hpp" lineno="61" virtual="non" meta="plain" const="false" static="false" overload="true" delete="false" default="false" final="false" override="false" overload-number="1" type="QString" signature="QString parseString(const int index, const QString &amp;type, const QStringList &amp;list, const int skip, const int grab)">
                    <parameter left="const int" right="" name="index" default=""/>
                    <parameter left="const QString &amp;" right="" name="type" default=""/>
                    <parameter left="const QStringList &amp;" right="" name="list" default=""/>
                    <parameter left="const int" right="" name="skip" default="0"/>
                    <parameter left="const int" right="" name="grab" default="1"/>
                </function>
                <function threadsafety="unspecified" name="splitText" fullname="As::StringParser::splitText" href="as-stringparser.html#splitText" status="active" access="public" location="StringParser.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/StringParser.hpp" lineno="76" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString splitText(const int nChars, const int nColumns)">
                    <parameter left="const int" right="" name="nChars" default=""/>
                    <parameter left="const int" right="" name="nColumns" default=""/>
                </function>
                <function threadsafety="unspecified" name="StringParser" fullname="As::StringParser::StringParser" href="as-stringparser.html#StringParser" status="active" access="public" location="StringParser.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/StringParser.hpp" lineno="35" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="StringParser()"/>
                <function threadsafety="unspecified" name="StringParser" fullname="As::StringParser::StringParser" href="as-stringparser.html#StringParser-1" status="active" access="public" location="StringParser.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/StringParser.hpp" lineno="36" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="StringParser(const String &amp;other)">
                    <parameter left="const String &amp;" right="" name="other" default=""/>
                </function>
                <function threadsafety="unspecified" name="readCheckIncrement" fullname="As::StringParser::readCheckIncrement" href="as-stringparser.html#readCheckIncrement" status="active" access="public" location="StringParser.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/StringParser.hpp" lineno="45" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void readCheckIncrement(const QStringList &amp;list, int &amp;index)">
                    <parameter left="const QStringList &amp;" right="" name="list" default=""/>
                    <parameter left="int &amp;" right="" name="index" default=""/>
                </function>
                <function threadsafety="unspecified" name="setFromList" fullname="As::StringParser::setFromList" href="as-stringparser.html#setFromList-1" status="active" access="public" location="StringParser.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/StringParser.hpp" lineno="51" virtual="non" meta="plain" const="false" static="false" overload="true" delete="false" default="false" final="false" override="false" overload-number="1" type="void" signature="void setFromList(const QString &amp;text, const QStringList &amp;list, const int skip, const int grab)">
                    <parameter left="const QString &amp;" right="" name="text" default=""/>
                    <parameter left="const QStringList &amp;" right="" name="list" default=""/>
                    <parameter left="const int" right="" name="skip" default="0"/>
                    <parameter left="const int" right="" name="grab" default="1"/>
                </function>
                <function threadsafety="unspecified" name="setFromList" fullname="As::StringParser::setFromList" href="as-stringparser.html#setFromList-2" status="active" access="public" location="StringParser.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/StringParser.hpp" lineno="55" virtual="non" meta="plain" const="false" static="false" overload="true" delete="false" default="false" final="false" override="false" overload-number="2" type="void" signature="void setFromList(const QString &amp;textFrom, const QString &amp;textTo, const QStringList &amp;list, const int skip)">
                    <parameter left="const QString &amp;" right="" name="textFrom" default=""/>
                    <parameter left="const QString &amp;" right="" name="textTo" default=""/>
                    <parameter left="const QStringList &amp;" right="" name="list" default=""/>
                    <parameter left="const int" right="" name="skip" default="0"/>
                </function>
                <function threadsafety="unspecified" name="setFromList" fullname="As::StringParser::setFromList" href="as-stringparser.html#setFromList" status="active" access="public" location="StringParser.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/StringParser.hpp" lineno="47" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setFromList(const int index, const QStringList &amp;list, const int skip, const int grab)">
                    <parameter left="const int" right="" name="index" default=""/>
                    <parameter left="const QStringList &amp;" right="" name="list" default=""/>
                    <parameter left="const int" right="" name="skip" default="0"/>
                    <parameter left="const int" right="" name="grab" default="1"/>
                </function>
                <function threadsafety="unspecified" name="~StringParser" fullname="As::StringParser::~StringParser" href="as-stringparser.html#dtor.StringParser" status="active" access="public" location="StringParser.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/StringParser.hpp" lineno="38" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~StringParser()"/>
                <function threadsafety="unspecified" name="indexOfText" fullname="As::StringParser::indexOfText" href="as-stringparser.html#indexOfText" status="active" access="public" location="StringParser.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/StringParser.hpp" lineno="42" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int indexOfText(const QString &amp;text, const QStringList &amp;list, const int from) const">
                    <parameter left="const QString &amp;" right="" name="text" default=""/>
                    <parameter left="const QStringList &amp;" right="" name="list" default=""/>
                    <parameter left="const int" right="" name="from" default="0"/>
                </function>
            </class>
            <class threadsafety="unspecified" name="SaveHeaders" fullname="As::SaveHeaders" href="as-saveheaders.html" status="active" access="public" location="SaveHeaders.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/SaveHeaders.hpp" lineno="30" module="Diffraction" brief="Class that provides the different output text formats to save the processed data">
                <function threadsafety="unspecified" name="SaveHeaders" fullname="As::SaveHeaders::SaveHeaders" href="as-saveheaders.html#SaveHeaders" status="active" access="public" location="SaveHeaders.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/SaveHeaders.hpp" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SaveHeaders(QString type, const QStringList &amp;headers)">
                    <parameter left="QString" right="" name="type" default=""/>
                    <parameter left="const QStringList &amp;" right="" name="headers" default=""/>
                </function>
                <function threadsafety="unspecified" name="~SaveHeaders" fullname="As::SaveHeaders::~SaveHeaders" href="as-saveheaders.html#dtor.SaveHeaders" status="active" access="public" location="SaveHeaders.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/SaveHeaders.hpp" lineno="36" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~SaveHeaders()"/>
                <variable threadsafety="unspecified" name="m_addHeader" fullname="As::SaveHeaders::m_addHeader" href="as-saveheaders.html#m_addHeader-var" status="active" access="public" location="SaveHeaders.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/SaveHeaders.hpp" lineno="43" type="bool" static="false"/>
                <variable threadsafety="unspecified" name="m_fieldWidth" fullname="As::SaveHeaders::m_fieldWidth" href="as-saveheaders.html#m_fieldWidth-var" status="active" access="public" location="SaveHeaders.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/SaveHeaders.hpp" lineno="40" type="QVector&lt;int&gt;" static="false"/>
                <variable threadsafety="unspecified" name="m_format" fullname="As::SaveHeaders::m_format" href="as-saveheaders.html#m_format-var" status="active" access="public" location="SaveHeaders.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/SaveHeaders.hpp" lineno="39" type="QStringList" static="false"/>
                <variable threadsafety="unspecified" name="m_index" fullname="As::SaveHeaders::m_index" href="as-saveheaders.html#m_index-var" status="active" access="public" location="SaveHeaders.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/SaveHeaders.hpp" lineno="42" type="QVector&lt;int&gt;" static="false"/>
                <variable threadsafety="unspecified" name="m_name" fullname="As::SaveHeaders::m_name" href="as-saveheaders.html#m_name-var" status="active" access="public" location="SaveHeaders.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/SaveHeaders.hpp" lineno="38" type="QStringList" static="false"/>
                <variable threadsafety="unspecified" name="m_precision" fullname="As::SaveHeaders::m_precision" href="as-saveheaders.html#m_precision-var" status="active" access="public" location="SaveHeaders.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/SaveHeaders.hpp" lineno="41" type="QVector&lt;int&gt;" static="false"/>
            </class>
            <class threadsafety="unspecified" name="Scan" fullname="As::Scan" href="as-scan.html" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="37" module="Diffraction" brief="Class that provides a set of variables required to describe the generic diffraction scan">
                <function threadsafety="unspecified" name="Scan" fullname="As::Scan::Scan" href="as-scan.html#Scan" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="42" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Scan(QObject *parent)">
                    <parameter left="QObject *" right="" name="parent" default="Q_NULLPTR"/>
                </function>
                <function threadsafety="unspecified" name="appendData" fullname="As::Scan::appendData" href="as-scan.html#appendData" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="50" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void appendData(const QString &amp;section, const QString &amp;entry, const QString &amp;data)">
                    <parameter left="const QString &amp;" right="" name="section" default=""/>
                    <parameter left="const QString &amp;" right="" name="entry" default=""/>
                    <parameter left="const QString &amp;" right="" name="data" default=""/>
                </function>
                <function threadsafety="unspecified" name="createExtractedTableModel_Slot" fullname="As::Scan::createExtractedTableModel_Slot" href="as-scan.html#createExtractedTableModel_Slot" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="142" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void createExtractedTableModel_Slot()"/>
                <function threadsafety="unspecified" name="init" fullname="As::Scan::init" href="as-scan.html#init" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="45" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void init()"/>
                <function threadsafety="unspecified" name="removeData" fullname="As::Scan::removeData" href="as-scan.html#removeData" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="53" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void removeData(const QString &amp;section, const QString &amp;entry)">
                    <parameter left="const QString &amp;" right="" name="section" default=""/>
                    <parameter left="const QString &amp;" right="" name="entry" default=""/>
                </function>
                <function threadsafety="unspecified" name="setAbsoluteFilePath" fullname="As::Scan::setAbsoluteFilePath" href="as-scan.html#setAbsoluteFilePath" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="86" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setAbsoluteFilePath(const QString &amp;name)">
                    <parameter left="const QString &amp;" right="" name="name" default=""/>
                </function>
                <function threadsafety="unspecified" name="setData" fullname="As::Scan::setData" href="as-scan.html#setData" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="47" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setData(const QString &amp;section, const QString &amp;entry, const QString &amp;data)">
                    <parameter left="const QString &amp;" right="" name="section" default=""/>
                    <parameter left="const QString &amp;" right="" name="entry" default=""/>
                    <parameter left="const QString &amp;" right="" name="data" default=""/>
                </function>
                <function threadsafety="unspecified" name="setFileIndex" fullname="As::Scan::setFileIndex" href="as-scan.html#setFileIndex" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="93" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setFileIndex(const int index)">
                    <parameter left="const int" right="" name="index" default=""/>
                </function>
                <function threadsafety="unspecified" name="setIndex" fullname="As::Scan::setIndex" href="as-scan.html#setIndex" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="96" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setIndex(const int index)">
                    <parameter left="const int" right="" name="index" default=""/>
                </function>
                <function threadsafety="unspecified" name="setPlotType" fullname="As::Scan::setPlotType" href="as-scan.html#setPlotType" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="102" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setPlotType(const As::PlotType plotType)">
                    <parameter left="const As::PlotType" right="" name="plotType" default=""/>
                </function>
                <function threadsafety="unspecified" name="setScanAngle" fullname="As::Scan::setScanAngle" href="as-scan.html#setScanAngle" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="80" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setScanAngle(const QString &amp;name)">
                    <parameter left="const QString &amp;" right="" name="name" default=""/>
                </function>
                <function threadsafety="unspecified" name="setScanStep" fullname="As::Scan::setScanStep" href="as-scan.html#setScanStep" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="83" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setScanStep(const qreal value)">
                    <parameter left="const qreal" right="" name="value" default=""/>
                </function>
                <function threadsafety="unspecified" name="setSize" fullname="As::Scan::setSize" href="as-scan.html#setSize" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="99" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setSize(const int size)">
                    <parameter left="const int" right="" name="size" default=""/>
                </function>
                <function threadsafety="unspecified" name="~Scan" fullname="As::Scan::~Scan" href="as-scan.html#dtor.Scan" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="43" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Scan()"/>
                <function threadsafety="unspecified" name="plotType" fullname="As::Scan::plotType" href="as-scan.html#plotType" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="103" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="As::PlotType" signature="As::PlotType plotType() const"/>
                <function threadsafety="unspecified" name="toQMap" fullname="As::Scan::toQMap" href="as-scan.html#toQMap" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="78" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const As::ScanMap" signature="const As::ScanMap toQMap() const"/>
                <function threadsafety="unspecified" name="operator[]" fullname="As::Scan::operator[]" href="as-scan.html#operator-5b-5d" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="77" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const As::ScanSectionMap" signature="const As::ScanSectionMap operator[](const QString &amp;key) const">
                    <parameter left="const QString &amp;" right="" name="key" default=""/>
                </function>
                <function threadsafety="unspecified" name="absoluteFilePath" fullname="As::Scan::absoluteFilePath" href="as-scan.html#absoluteFilePath" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="87" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const QString" signature="const QString absoluteFilePath() const"/>
                <function threadsafety="unspecified" name="absolutePath" fullname="As::Scan::absolutePath" href="as-scan.html#absolutePath" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="88" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const QString" signature="const QString absolutePath() const"/>
                <function threadsafety="unspecified" name="absolutePathWithBaseName" fullname="As::Scan::absolutePathWithBaseName" href="as-scan.html#absolutePathWithBaseName" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="90" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const QString" signature="const QString absolutePathWithBaseName() const"/>
                <function threadsafety="unspecified" name="absolutePathWithBaseNameAndHkl" fullname="As::Scan::absolutePathWithBaseNameAndHkl" href="as-scan.html#absolutePathWithBaseNameAndHkl" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="91" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const QString" signature="const QString absolutePathWithBaseNameAndHkl() const"/>
                <function threadsafety="unspecified" name="baseName" fullname="As::Scan::baseName" href="as-scan.html#baseName" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="89" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const QString" signature="const QString baseName() const"/>
                <function threadsafety="unspecified" name="data" fullname="As::Scan::data" href="as-scan.html#data" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="60" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const QString" signature="const QString data(const QString &amp;section, const QString &amp;entry, bool *ok) const">
                    <parameter left="const QString &amp;" right="" name="section" default=""/>
                    <parameter left="const QString &amp;" right="" name="entry" default=""/>
                    <parameter left="bool *" right="" name="ok" default="Q_NULLPTR"/>
                </function>
                <function threadsafety="unspecified" name="format" fullname="As::Scan::format" href="as-scan.html#format" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="63" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const QString" signature="const QString format(const QString &amp;section, const QString &amp;entry, bool *ok) const">
                    <parameter left="const QString &amp;" right="" name="section" default=""/>
                    <parameter left="const QString &amp;" right="" name="entry" default=""/>
                    <parameter left="bool *" right="" name="ok" default="Q_NULLPTR"/>
                </function>
                <function threadsafety="unspecified" name="printDataRange" fullname="As::Scan::printDataRange" href="as-scan.html#printDataRange" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="72" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const QString" signature="const QString printDataRange(const QString &amp;section, const QString &amp;entry) const">
                    <parameter left="const QString &amp;" right="" name="section" default=""/>
                    <parameter left="const QString &amp;" right="" name="entry" default=""/>
                </function>
                <function threadsafety="unspecified" name="printDataSingle" fullname="As::Scan::printDataSingle" href="as-scan.html#printDataSingle-1" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="70" virtual="non" meta="plain" const="true" static="false" overload="true" delete="false" default="false" final="false" override="false" overload-number="1" type="const QString" signature="const QString printDataSingle(const QString &amp;section, const QString &amp;entry) const">
                    <parameter left="const QString &amp;" right="" name="section" default=""/>
                    <parameter left="const QString &amp;" right="" name="entry" default=""/>
                </function>
                <function threadsafety="unspecified" name="printDataSingle" fullname="As::Scan::printDataSingle" href="as-scan.html#printDataSingle" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="67" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const QString" signature="const QString printDataSingle(const QString &amp;section, const QString &amp;entry, const QString &amp;format) const">
                    <parameter left="const QString &amp;" right="" name="section" default=""/>
                    <parameter left="const QString &amp;" right="" name="entry" default=""/>
                    <parameter left="const QString &amp;" right="" name="format" default=""/>
                </function>
                <function threadsafety="unspecified" name="scanAngle" fullname="As::Scan::scanAngle" href="as-scan.html#scanAngle" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="81" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const QString" signature="const QString scanAngle() const"/>
                <function threadsafety="unspecified" name="value" fullname="As::Scan::value" href="as-scan.html#value" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="56" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const QString" signature="const QString value(const QString &amp;section, const QString &amp;entry, const QString &amp;name, bool *ok) const">
                    <parameter left="const QString &amp;" right="" name="section" default=""/>
                    <parameter left="const QString &amp;" right="" name="entry" default=""/>
                    <parameter left="const QString &amp;" right="" name="name" default=""/>
                    <parameter left="bool *" right="" name="ok" default="Q_NULLPTR"/>
                </function>
                <function threadsafety="unspecified" name="keys" fullname="As::Scan::keys" href="as-scan.html#keys" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="75" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const QStringList" signature="const QStringList keys() const"/>
                <function threadsafety="unspecified" name="fileIndex" fullname="As::Scan::fileIndex" href="as-scan.html#fileIndex" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="94" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int fileIndex() const"/>
                <function threadsafety="unspecified" name="index" fullname="As::Scan::index" href="as-scan.html#index" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="97" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int index() const"/>
                <function threadsafety="unspecified" name="size" fullname="As::Scan::size" href="as-scan.html#size" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="100" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int size() const"/>
                <function threadsafety="unspecified" name="scanStep" fullname="As::Scan::scanStep" href="as-scan.html#scanStep" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="84" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="qreal" signature="qreal scanStep() const"/>
                <variable threadsafety="unspecified" name="BKG_TYPES" fullname="As::Scan::BKG_TYPES" href="as-scan.html#BKG_TYPES-var" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="135" type="const QStringList" static="true" brief="This variable holds the background determination types available for the scan"/>
                <variable threadsafety="unspecified" name="FIT_TYPES" fullname="As::Scan::FIT_TYPES" href="as-scan.html#FIT_TYPES-var" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="134" type="const QStringList" static="true" brief="This variable holds the peak profile fit types available for the scan"/>
                <variable threadsafety="unspecified" name="m_integrationSubType" fullname="As::Scan::m_integrationSubType" href="as-scan.html#m_integrationSubType-var" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="139" type="QString = BKG_TYPES[0]" static="false"/>
                <variable threadsafety="unspecified" name="m_integrationType" fullname="As::Scan::m_integrationType" href="as-scan.html#m_integrationType-var" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="138" type="QString =&quot;Conventional peak integration&quot;" static="false"/>
                <variable threadsafety="unspecified" name="m_isIndividuallyTreated" fullname="As::Scan::m_isIndividuallyTreated" href="as-scan.html#m_isIndividuallyTreated-var" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="131" type="bool = false" static="false"/>
                <variable threadsafety="unspecified" name="m_mcCandlishFactor" fullname="As::Scan::m_mcCandlishFactor" href="as-scan.html#m_mcCandlishFactor-var" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="129" type="qreal" static="false"/>
                <variable threadsafety="unspecified" name="m_meanIndexH" fullname="As::Scan::m_meanIndexH" href="as-scan.html#m_meanIndexH-var" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="105" type="qreal" static="false"/>
                <variable threadsafety="unspecified" name="m_meanIndexK" fullname="As::Scan::m_meanIndexK" href="as-scan.html#m_meanIndexK-var" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="106" type="qreal" static="false"/>
                <variable threadsafety="unspecified" name="m_meanIndexL" fullname="As::Scan::m_meanIndexL" href="as-scan.html#m_meanIndexL-var" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="107" type="qreal" static="false"/>
                <variable threadsafety="unspecified" name="m_normMeanBkg" fullname="As::Scan::m_normMeanBkg" href="as-scan.html#m_normMeanBkg-var" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="116" type="qreal" static="false"/>
                <variable threadsafety="unspecified" name="m_numLeftBkgPoints" fullname="As::Scan::m_numLeftBkgPoints" href="as-scan.html#m_numLeftBkgPoints-var" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="113" type="int" static="false"/>
                <variable threadsafety="unspecified" name="m_numLeftSkipPoints" fullname="As::Scan::m_numLeftSkipPoints" href="as-scan.html#m_numLeftSkipPoints-var" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="110" type="int" static="false"/>
                <variable threadsafety="unspecified" name="m_numNonSkipPoints" fullname="As::Scan::m_numNonSkipPoints" href="as-scan.html#m_numNonSkipPoints-var" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="112" type="int" static="false"/>
                <variable threadsafety="unspecified" name="m_numPeakPoints" fullname="As::Scan::m_numPeakPoints" href="as-scan.html#m_numPeakPoints-var" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="115" type="int" static="false"/>
                <variable threadsafety="unspecified" name="m_numPoints" fullname="As::Scan::m_numPoints" href="as-scan.html#m_numPoints-var" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="109" type="int" static="false"/>
                <variable threadsafety="unspecified" name="m_numRightBkgPoints" fullname="As::Scan::m_numRightBkgPoints" href="as-scan.html#m_numRightBkgPoints-var" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="114" type="int" static="false"/>
                <variable threadsafety="unspecified" name="m_numRightSkipPoints" fullname="As::Scan::m_numRightSkipPoints" href="as-scan.html#m_numRightSkipPoints-var" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="111" type="int" static="false"/>
                <variable threadsafety="unspecified" name="m_peakPosition" fullname="As::Scan::m_peakPosition" href="as-scan.html#m_peakPosition-var" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="119" type="qreal" static="false"/>
                <variable threadsafety="unspecified" name="m_removeNeighborsType" fullname="As::Scan::m_removeNeighborsType" href="as-scan.html#m_removeNeighborsType-var" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="137" type="QString =&quot;Manually remove neighbors&quot;" static="false"/>
                <variable threadsafety="unspecified" name="m_tableModel" fullname="As::Scan::m_tableModel" href="as-scan.html#m_tableModel-var" status="active" access="public" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="128" type="QStandardItemModel *" static="false"/>
            </class>
            <class threadsafety="unspecified" name="ScanArray" fullname="As::ScanArray" href="as-scanarray.html" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="40" module="Diffraction" brief="Class that provides an array of the measured scans">
                <function threadsafety="unspecified" name="filesType" fullname="As::ScanArray::filesType" href="as-scanarray.html#filesType" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="65" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="As::InputFileType" signature="As::InputFileType filesType()"/>
                <function threadsafety="unspecified" name="IntensityWithSigma" fullname="As::ScanArray::IntensityWithSigma" href="as-scanarray.html#IntensityWithSigma" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="178" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="As::RealVector" signature="As::RealVector IntensityWithSigma(const As::RealVector &amp;intensities, const As::RealVector &amp;sigmas, const int numLeftBkgPoints, const int numRightBkgPoints, const int numLeftSkipPoints, const int numRightSkipPoints, const qreal mcCandlishFactor)">
                    <parameter left="const As::RealVector &amp;" right="" name="intensities" default=""/>
                    <parameter left="const As::RealVector &amp;" right="" name="sigmas" default=""/>
                    <parameter left="const int" right="" name="numLeftBkgPoints" default=""/>
                    <parameter left="const int" right="" name="numRightBkgPoints" default=""/>
                    <parameter left="const int" right="" name="numLeftSkipPoints" default=""/>
                    <parameter left="const int" right="" name="numRightSkipPoints" default=""/>
                    <parameter left="const qreal" right="" name="mcCandlishFactor" default=""/>
                </function>
                <function threadsafety="unspecified" name="at" fullname="As::ScanArray::at" href="as-scanarray.html#at" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="49" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="As::Scan *" signature="As::Scan * at(const int i)">
                    <parameter left="const int" right="" name="i" default=""/>
                </function>
                <function threadsafety="unspecified" name="begin" fullname="As::ScanArray::begin" href="as-scanarray.html#begin" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="55" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="As::Scan *" signature="As::Scan * begin()"/>
                <function threadsafety="unspecified" name="end" fullname="As::ScanArray::end" href="as-scanarray.html#end" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="56" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="As::Scan *" signature="As::Scan * end()"/>
                <function threadsafety="unspecified" name="operator[]" fullname="As::ScanArray::operator[]" href="as-scanarray.html#operator-5b-5d" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="51" virtual="non" meta="plain" const="false" static="false" overload="true" delete="false" default="false" final="false" override="false" overload-number="0" type="As::Scan *" signature="As::Scan * operator[](const int i)">
                    <parameter left="const int" right="" name="i" default=""/>
                </function>
                <function threadsafety="unspecified" name="ScanArray" fullname="As::ScanArray::ScanArray" href="as-scanarray.html#ScanArray" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="45" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ScanArray(QObject *parent)">
                    <parameter left="QObject *" right="" name="parent" default="Q_NULLPTR"/>
                </function>
                <function threadsafety="unspecified" name="detectInputFileType" fullname="As::ScanArray::detectInputFileType" href="as-scanarray.html#detectInputFileType" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="64" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool detectInputFileType()"/>
                <function threadsafety="unspecified" name="lorentzCorrectionFactor" fullname="As::ScanArray::lorentzCorrectionFactor" href="as-scanarray.html#lorentzCorrectionFactor" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="176" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="qreal" signature="qreal lorentzCorrectionFactor(const qreal gammaMean, const qreal nuMean)">
                    <parameter left="const qreal" right="" name="gammaMean" default=""/>
                    <parameter left="const qreal" right="" name="nuMean" default="0."/>
                </function>
                <function threadsafety="unspecified" name="adjustBkgPoints" fullname="As::ScanArray::adjustBkgPoints" href="as-scanarray.html#adjustBkgPoints" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="167" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void adjustBkgPoints(As::Scan *scan)">
                    <parameter left="As::Scan *" right="" name="scan" default=""/>
                </function>
                <function threadsafety="unspecified" name="append" fullname="As::ScanArray::append" href="as-scanarray.html#append" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="54" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void append(As::Scan *scan)">
                    <parameter left="As::Scan *" right="" name="scan" default=""/>
                </function>
                <function threadsafety="unspecified" name="appendScan" fullname="As::ScanArray::appendScan" href="as-scanarray.html#appendScan" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="137" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void appendScan(As::Scan *scan)">
                    <parameter left="As::Scan *" right="" name="scan" default=""/>
                </function>
                <function threadsafety="unspecified" name="calcBkg" fullname="As::ScanArray::calcBkg" href="as-scanarray.html#calcBkg" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="168" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void calcBkg(As::Scan *scan)">
                    <parameter left="As::Scan *" right="" name="scan" default=""/>
                </function>
                <function threadsafety="unspecified" name="calcEsd" fullname="As::ScanArray::calcEsd" href="as-scanarray.html#calcEsd" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="164" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void calcEsd(As::Scan *scan)">
                    <parameter left="As::Scan *" right="" name="scan" default=""/>
                </function>
                <function threadsafety="unspecified" name="calcFlippingRatio" fullname="As::ScanArray::calcFlippingRatio" href="as-scanarray.html#calcFlippingRatio" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="175" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void calcFlippingRatio(As::Scan *scan)">
                    <parameter left="As::Scan *" right="" name="scan" default=""/>
                </function>
                <function threadsafety="unspecified" name="calcFullWidthHalfMax" fullname="As::ScanArray::calcFullWidthHalfMax" href="as-scanarray.html#calcFullWidthHalfMax" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="174" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void calcFullWidthHalfMax(As::Scan *scan)">
                    <parameter left="As::Scan *" right="" name="scan" default=""/>
                </function>
                <function threadsafety="unspecified" name="calcMaxPeakInty" fullname="As::ScanArray::calcMaxPeakInty" href="as-scanarray.html#calcMaxPeakInty" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="169" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void calcMaxPeakInty(As::Scan *scan)">
                    <parameter left="As::Scan *" right="" name="scan" default=""/>
                </function>
                <function threadsafety="unspecified" name="calcNormPeakArea" fullname="As::ScanArray::calcNormPeakArea" href="as-scanarray.html#calcNormPeakArea" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="172" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void calcNormPeakArea(As::Scan *scan)">
                    <parameter left="As::Scan *" right="" name="scan" default=""/>
                </function>
                <function threadsafety="unspecified" name="calcPeakArea" fullname="As::ScanArray::calcPeakArea" href="as-scanarray.html#calcPeakArea" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="171" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void calcPeakArea(As::Scan *scan)">
                    <parameter left="As::Scan *" right="" name="scan" default=""/>
                </function>
                <function threadsafety="unspecified" name="calcStructFactor" fullname="As::ScanArray::calcStructFactor" href="as-scanarray.html#calcStructFactor" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="173" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void calcStructFactor(As::Scan *scan)">
                    <parameter left="As::Scan *" right="" name="scan" default=""/>
                </function>
                <function threadsafety="unspecified" name="calcSumPeakInty" fullname="As::ScanArray::calcSumPeakInty" href="as-scanarray.html#calcSumPeakInty" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="170" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void calcSumPeakInty(As::Scan *scan)">
                    <parameter left="As::Scan *" right="" name="scan" default=""/>
                </function>
                <function threadsafety="unspecified" name="calcUnpolData" fullname="As::ScanArray::calcUnpolData" href="as-scanarray.html#calcUnpolData" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="72" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void calcUnpolData(const QString &amp;section, const QString &amp;entry, As::Scan *scan)">
                    <parameter left="const QString &amp;" right="" name="section" default=""/>
                    <parameter left="const QString &amp;" right="" name="entry" default=""/>
                    <parameter left="As::Scan *" right="" name="scan" default=""/>
                </function>
                <function threadsafety="unspecified" name="clear" fullname="As::ScanArray::clear" href="as-scanarray.html#clear" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="57" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void clear()"/>
                <function threadsafety="unspecified" name="createAllExtractedTablesModels" fullname="As::ScanArray::createAllExtractedTablesModels" href="as-scanarray.html#createAllExtractedTablesModels" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="75" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void createAllExtractedTablesModels()"/>
                <function threadsafety="unspecified" name="createFullOutputTable" fullname="As::ScanArray::createFullOutputTable" href="as-scanarray.html#createFullOutputTable" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="85" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void createFullOutputTable()"/>
                <function threadsafety="unspecified" name="dataTypeChanged_Signal" fullname="As::ScanArray::dataTypeChanged_Signal" href="as-scanarray.html#dataTypeChanged_Signal" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="102" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void dataTypeChanged_Signal(const QString &amp;type)">
                    <parameter left="const QString &amp;" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="definePolarisationCrossSection" fullname="As::ScanArray::definePolarisationCrossSection" href="as-scanarray.html#definePolarisationCrossSection" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="163" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void definePolarisationCrossSection(As::Scan *scan)">
                    <parameter left="As::Scan *" right="" name="scan" default=""/>
                </function>
                <function threadsafety="unspecified" name="extract6t2Data" fullname="As::ScanArray::extract6t2Data" href="as-scanarray.html#extract6t2Data" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="134" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void extract6t2Data()"/>
                <function threadsafety="unspecified" name="extractDataFromTable" fullname="As::ScanArray::extractDataFromTable" href="as-scanarray.html#extractDataFromTable" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="135" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void extractDataFromTable(As::Scan *scan, QList&lt;QStringList&gt; &amp;headerMap)">
                    <parameter left="As::Scan *" right="" name="scan" default=""/>
                    <parameter left="QList&lt;QStringList&gt; &amp;" right="" name="headerMap" default=""/>
                </function>
                <function threadsafety="unspecified" name="extractHeidiData" fullname="As::ScanArray::extractHeidiData" href="as-scanarray.html#extractHeidiData" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="131" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void extractHeidiData()"/>
                <function threadsafety="unspecified" name="extractInputData" fullname="As::ScanArray::extractInputData" href="as-scanarray.html#extractInputData" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="68" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void extractInputData()"/>
                <function threadsafety="unspecified" name="extractNicosData" fullname="As::ScanArray::extractNicosData" href="as-scanarray.html#extractNicosData" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="132" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void extractNicosData()"/>
                <function threadsafety="unspecified" name="extractPoliLog" fullname="As::ScanArray::extractPoliLog" href="as-scanarray.html#extractPoliLog" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="133" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void extractPoliLog()"/>
                <function threadsafety="unspecified" name="facilityTypeChanged_Signal" fullname="As::ScanArray::facilityTypeChanged_Signal" href="as-scanarray.html#facilityTypeChanged_Signal" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="100" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void facilityTypeChanged_Signal(const QString &amp;type)">
                    <parameter left="const QString &amp;" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="fileIndexChanged" fullname="As::ScanArray::fileIndexChanged" href="as-scanarray.html#fileIndexChanged" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="105" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void fileIndexChanged(const int index)">
                    <parameter left="const int" right="" name="index" default=""/>
                </function>
                <function threadsafety="unspecified" name="fillEmptyArrays" fullname="As::ScanArray::fillEmptyArrays" href="as-scanarray.html#fillEmptyArrays" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="71" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void fillEmptyArrays()"/>
                <function threadsafety="unspecified" name="findNonPeakPoints" fullname="As::ScanArray::findNonPeakPoints" href="as-scanarray.html#findNonPeakPoints" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="166" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void findNonPeakPoints(As::Scan *scan)">
                    <parameter left="As::Scan *" right="" name="scan" default=""/>
                </function>
                <function threadsafety="unspecified" name="indexPeaks" fullname="As::ScanArray::indexPeaks" href="as-scanarray.html#indexPeaks" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="79" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void indexPeaks()"/>
                <function threadsafety="unspecified" name="instrumentTypeChanged_Signal" fullname="As::ScanArray::instrumentTypeChanged_Signal" href="as-scanarray.html#instrumentTypeChanged_Signal" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="101" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void instrumentTypeChanged_Signal(const QString &amp;type)">
                    <parameter left="const QString &amp;" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="normalizeByTime" fullname="As::ScanArray::normalizeByTime" href="as-scanarray.html#normalizeByTime" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="165" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void normalizeByTime(As::Scan *scan)">
                    <parameter left="As::Scan *" right="" name="scan" default=""/>
                </function>
                <function threadsafety="unspecified" name="preTreatData" fullname="As::ScanArray::preTreatData" href="as-scanarray.html#preTreatData" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="82" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void preTreatData()"/>
                <function threadsafety="unspecified" name="saveSelectedOutputColumns" fullname="As::ScanArray::saveSelectedOutputColumns" href="as-scanarray.html#saveSelectedOutputColumns" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="60" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void saveSelectedOutputColumns(const QString &amp;fileName, const QString &amp;filter)">
                    <parameter left="const QString &amp;" right="" name="fileName" default=""/>
                    <parameter left="const QString &amp;" right="" name="filter" default=""/>
                </function>
                <function threadsafety="unspecified" name="scanIndexChanged" fullname="As::ScanArray::scanIndexChanged" href="as-scanarray.html#scanIndexChanged" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="104" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void scanIndexChanged(const int index)">
                    <parameter left="const int" right="" name="index" default=""/>
                </function>
                <function threadsafety="unspecified" name="setFileIndex" fullname="As::ScanArray::setFileIndex" href="as-scanarray.html#setFileIndex" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="95" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setFileIndex(const int index)">
                    <parameter left="const int" right="" name="index" default=""/>
                </function>
                <function threadsafety="unspecified" name="setFileIndexByScanIndex" fullname="As::ScanArray::setFileIndexByScanIndex" href="as-scanarray.html#setFileIndexByScanIndex" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="96" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setFileIndexByScanIndex(const int index)">
                    <parameter left="const int" right="" name="index" default=""/>
                </function>
                <function threadsafety="unspecified" name="setInputFileType" fullname="As::ScanArray::setInputFileType" href="as-scanarray.html#setInputFileType" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="92" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setInputFileType(const As::InputFileType type)">
                    <parameter left="const As::InputFileType" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="setScanIndex" fullname="As::ScanArray::setScanIndex" href="as-scanarray.html#setScanIndex" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="94" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setScanIndex(const int index)">
                    <parameter left="const int" right="" name="index" default=""/>
                </function>
                <function threadsafety="unspecified" name="setSelectedOutputColumns" fullname="As::ScanArray::setSelectedOutputColumns" href="as-scanarray.html#setSelectedOutputColumns" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="58" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setSelectedOutputColumns(As::SaveHeaders &amp;saveHeaders, QString &amp;table)">
                    <parameter left="As::SaveHeaders &amp;" right="" name="saveHeaders" default=""/>
                    <parameter left="QString &amp;" right="" name="table" default=""/>
                </function>
                <function threadsafety="unspecified" name="treatData" fullname="As::ScanArray::treatData" href="as-scanarray.html#treatData" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="84" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void treatData()"/>
                <function threadsafety="unspecified" name="treatSingle" fullname="As::ScanArray::treatSingle" href="as-scanarray.html#treatSingle" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="83" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void treatSingle(const int index, const bool sure)">
                    <parameter left="const int" right="" name="index" default=""/>
                    <parameter left="const bool" right="" name="sure" default="true"/>
                </function>
                <function threadsafety="unspecified" name="~ScanArray" fullname="As::ScanArray::~ScanArray" href="as-scanarray.html#dtor.ScanArray" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="46" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~ScanArray()"/>
                <function threadsafety="unspecified" name="anglesToXyz" fullname="As::ScanArray::anglesToXyz" href="as-scanarray.html#anglesToXyz" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="140" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const As::RealVector" signature="const As::RealVector anglesToXyz(const qreal wavelength, qreal gamma, qreal nu, qreal omega) const">
                    <parameter left="const qreal" right="" name="wavelength" default=""/>
                    <parameter left="qreal" right="" name="gamma" default=""/>
                    <parameter left="qreal" right="" name="nu" default=""/>
                    <parameter left="qreal" right="" name="omega" default=""/>
                </function>
                <function threadsafety="unspecified" name="anglesToXyz" fullname="As::ScanArray::anglesToXyz" href="as-scanarray.html#anglesToXyz-1" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="144" virtual="non" meta="plain" const="true" static="false" overload="true" delete="false" default="false" final="false" override="false" overload-number="1" type="const As::RealVector" signature="const As::RealVector anglesToXyz(const qreal wavelength, qreal twotheta, qreal omega, qreal chi, qreal phi) const">
                    <parameter left="const qreal" right="" name="wavelength" default=""/>
                    <parameter left="qreal" right="" name="twotheta" default=""/>
                    <parameter left="qreal" right="" name="omega" default=""/>
                    <parameter left="qreal" right="" name="chi" default=""/>
                    <parameter left="qreal" right="" name="phi" default=""/>
                </function>
                <function threadsafety="unspecified" name="hklToXyz" fullname="As::ScanArray::hklToXyz" href="as-scanarray.html#hklToXyz" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="153" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const As::RealVector" signature="const As::RealVector hklToXyz(const As::RealMatrix9 &amp;ub, const qreal h, const qreal k, const qreal l) const">
                    <parameter left="const As::RealMatrix9 &amp;" right="" name="ub" default=""/>
                    <parameter left="const qreal" right="" name="h" default=""/>
                    <parameter left="const qreal" right="" name="k" default=""/>
                    <parameter left="const qreal" right="" name="l" default=""/>
                </function>
                <function threadsafety="unspecified" name="xyzToAngles" fullname="As::ScanArray::xyzToAngles" href="as-scanarray.html#xyzToAngles" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="157" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const As::RealVector" signature="const As::RealVector xyzToAngles(const qreal wavelength, const qreal x, const qreal y, const qreal z) const">
                    <parameter left="const qreal" right="" name="wavelength" default=""/>
                    <parameter left="const qreal" right="" name="x" default=""/>
                    <parameter left="const qreal" right="" name="y" default=""/>
                    <parameter left="const qreal" right="" name="z" default=""/>
                </function>
                <function threadsafety="unspecified" name="xyzToHkl" fullname="As::ScanArray::xyzToHkl" href="as-scanarray.html#xyzToHkl" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="149" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const As::RealVector" signature="const As::RealVector xyzToHkl(const As::RealMatrix9 &amp;ub, const qreal x, const qreal y, const qreal z) const">
                    <parameter left="const As::RealMatrix9 &amp;" right="" name="ub" default=""/>
                    <parameter left="const qreal" right="" name="x" default=""/>
                    <parameter left="const qreal" right="" name="y" default=""/>
                    <parameter left="const qreal" right="" name="z" default=""/>
                </function>
                <function threadsafety="unspecified" name="at" fullname="As::ScanArray::at" href="as-scanarray.html#at-1" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="50" virtual="non" meta="plain" const="true" static="false" overload="true" delete="false" default="false" final="false" override="false" overload-number="1" type="const As::Scan *" signature="const As::Scan * at(const int i) const">
                    <parameter left="const int" right="" name="i" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator[]" fullname="As::ScanArray::operator[]" href="as-scanarray.html#operator-5b-5d-1" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="52" virtual="non" meta="plain" const="true" static="false" overload="true" delete="false" default="false" final="false" override="false" overload-number="1" type="const As::Scan *" signature="const As::Scan * operator[](const int i) const">
                    <parameter left="const int" right="" name="i" default=""/>
                </function>
                <function threadsafety="unspecified" name="fileIndex" fullname="As::ScanArray::fileIndex" href="as-scanarray.html#fileIndex" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="89" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int fileIndex() const"/>
                <function threadsafety="unspecified" name="scanIndex" fullname="As::ScanArray::scanIndex" href="as-scanarray.html#scanIndex" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="88" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int scanIndex() const"/>
                <function threadsafety="unspecified" name="size" fullname="As::ScanArray::size" href="as-scanarray.html#size" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="53" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int size() const"/>
                <variable threadsafety="unspecified" name="m_dataType" fullname="As::ScanArray::m_dataType" href="as-scanarray.html#m_dataType-var" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="117" type="QString" static="false"/>
                <variable threadsafety="unspecified" name="m_facilityType" fullname="As::ScanArray::m_facilityType" href="as-scanarray.html#m_facilityType-var" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="115" type="QString" static="false"/>
                <variable threadsafety="unspecified" name="m_fileIndex" fullname="As::ScanArray::m_fileIndex" href="as-scanarray.html#m_fileIndex-var" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="128" type="int = 0" static="false"/>
                <variable threadsafety="unspecified" name="m_inputFileType" fullname="As::ScanArray::m_inputFileType" href="as-scanarray.html#m_inputFileType-var" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="114" type="As::InputFileType = As::InputFileType( 0 )" static="false"/>
                <variable threadsafety="unspecified" name="m_inputFilesContents" fullname="As::ScanArray::m_inputFilesContents" href="as-scanarray.html#m_inputFilesContents-var" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="124" type="QPair&lt;QStringList, QStringList&gt;" static="false"/>
                <variable threadsafety="unspecified" name="m_instrumentType" fullname="As::ScanArray::m_instrumentType" href="as-scanarray.html#m_instrumentType-var" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="116" type="QString" static="false"/>
                <variable threadsafety="unspecified" name="m_outputTableData" fullname="As::ScanArray::m_outputTableData" href="as-scanarray.html#m_outputTableData-var" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="121" type="QList&lt;QStringList&gt;" static="false"/>
                <variable threadsafety="unspecified" name="m_outputTableHeaders" fullname="As::ScanArray::m_outputTableHeaders" href="as-scanarray.html#m_outputTableHeaders-var" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="120" type="QStringList" static="false"/>
                <variable threadsafety="unspecified" name="m_scanArray" fullname="As::ScanArray::m_scanArray" href="as-scanarray.html#m_scanArray-var" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="111" type="QVector&lt;As::Scan *&gt;" static="false"/>
                <variable threadsafety="unspecified" name="m_scanIndex" fullname="As::ScanArray::m_scanIndex" href="as-scanarray.html#m_scanIndex-var" status="active" access="public" location="ScanArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanArray.hpp" lineno="127" type="int = 0" static="false"/>
            </class>
            <class threadsafety="unspecified" name="ScanDatabase" fullname="As::ScanDatabase" href="as-scandatabase.html" status="active" access="public" location="ScanDatabase.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanDatabase.hpp" lineno="33" module="Diffraction" brief="Class that provides a database with all the possible parameters of the diffraction scan">
                <function threadsafety="unspecified" name="ScanDatabase" fullname="As::ScanDatabase::ScanDatabase" href="as-scandatabase.html#ScanDatabase" status="active" access="public" location="ScanDatabase.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanDatabase.hpp" lineno="37" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ScanDatabase()"/>
                <function threadsafety="unspecified" name="set" fullname="As::ScanDatabase::set" href="as-scandatabase.html#set" status="active" access="private" location="ScanDatabase.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanDatabase.hpp" lineno="44" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void set(const QString &amp;section, const QString &amp;entry, const QString &amp;format, const QString &amp;units, const QString &amp;tooltip)">
                    <parameter left="const QString &amp;" right="" name="section" default=""/>
                    <parameter left="const QString &amp;" right="" name="entry" default=""/>
                    <parameter left="const QString &amp;" right="" name="format" default=""/>
                    <parameter left="const QString &amp;" right="" name="units" default=""/>
                    <parameter left="const QString &amp;" right="" name="tooltip" default=""/>
                </function>
                <function threadsafety="unspecified" name="~ScanDatabase" fullname="As::ScanDatabase::~ScanDatabase" href="as-scandatabase.html#dtor.ScanDatabase" status="active" access="public" location="ScanDatabase.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanDatabase.hpp" lineno="38" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~ScanDatabase()"/>
                <function threadsafety="unspecified" name="operator[]" fullname="As::ScanDatabase::operator[]" href="as-scandatabase.html#operator-5b-5d" status="active" access="public" location="ScanDatabase.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanDatabase.hpp" lineno="40" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const As::ScanSectionMap" signature="const As::ScanSectionMap operator[](const QString &amp;section) const">
                    <parameter left="const QString &amp;" right="" name="section" default=""/>
                </function>
                <function threadsafety="unspecified" name="keys" fullname="As::ScanDatabase::keys" href="as-scandatabase.html#keys" status="active" access="public" location="ScanDatabase.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/ScanDatabase.hpp" lineno="41" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const QStringList" signature="const QStringList keys() const"/>
            </class>
            <class threadsafety="unspecified" name="CheckBox" fullname="As::CheckBox" href="as-checkbox.html" status="active" access="public" location="CheckBox.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/CheckBox.hpp" lineno="30" module="Widgets" groups="Widgets" brief="Custom class based on the QCheckBox">
                <function threadsafety="unspecified" name="CheckBox" fullname="As::CheckBox::CheckBox" href="as-checkbox.html#CheckBox" status="active" access="public" location="CheckBox.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/CheckBox.hpp" lineno="35" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="CheckBox(const QString &amp;text, QWidget *parent)">
                    <parameter left="const QString &amp;" right="" name="text" default=""/>
                    <parameter left="QWidget *" right="" name="parent" default="Q_NULLPTR"/>
                </function>
                <function threadsafety="unspecified" name="setCheckedSilently" fullname="As::CheckBox::setCheckedSilently" href="as-checkbox.html#setCheckedSilently" status="active" access="public" location="CheckBox.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/CheckBox.hpp" lineno="42" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setCheckedSilently(const bool state)">
                    <parameter left="const bool" right="" name="state" default=""/>
                </function>
                <function threadsafety="unspecified" name="~CheckBox" fullname="As::CheckBox::~CheckBox" href="as-checkbox.html#dtor.CheckBox" status="active" access="public" location="CheckBox.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/CheckBox.hpp" lineno="38" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~CheckBox()"/>
            </class>
            <class threadsafety="unspecified" name="ComboBox" fullname="As::ComboBox" href="as-combobox.html" status="active" access="public" location="ComboBox.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/ComboBox.hpp" lineno="28" module="Widgets" groups="Widgets" brief="Custom class based on the QComboBox">
                <function threadsafety="unspecified" name="ComboBox" fullname="As::ComboBox::ComboBox" href="as-combobox.html#ComboBox" status="active" access="public" location="ComboBox.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/ComboBox.hpp" lineno="32" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ComboBox(QWidget *parent)">
                    <parameter left="QWidget *" right="" name="parent" default="Q_NULLPTR"/>
                </function>
                <function threadsafety="unspecified" name="~ComboBox" fullname="As::ComboBox::~ComboBox" href="as-combobox.html#dtor.ComboBox" status="active" access="public" location="ComboBox.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/ComboBox.hpp" lineno="34" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~ComboBox()"/>
            </class>
            <class threadsafety="unspecified" name="FontComboBox" fullname="As::FontComboBox" href="as-fontcombobox.html" status="active" access="public" location="FontComboBox.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/FontComboBox.hpp" lineno="28" module="Widgets" groups="Widgets" brief="Custom class based on the QFontComboBox">
                <function threadsafety="unspecified" name="FontComboBox" fullname="As::FontComboBox::FontComboBox" href="as-fontcombobox.html#FontComboBox" status="active" access="public" location="FontComboBox.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/FontComboBox.hpp" lineno="32" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="FontComboBox(QWidget *parent)">
                    <parameter left="QWidget *" right="" name="parent" default="Q_NULLPTR"/>
                </function>
                <function threadsafety="unspecified" name="~FontComboBox" fullname="As::FontComboBox::~FontComboBox" href="as-fontcombobox.html#dtor.FontComboBox" status="active" access="public" location="FontComboBox.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/FontComboBox.hpp" lineno="34" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~FontComboBox()"/>
            </class>
            <class threadsafety="unspecified" name="GroupBox" fullname="As::GroupBox" href="as-groupbox.html" status="active" access="public" location="GroupBox.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/GroupBox.hpp" lineno="32" module="Widgets" groups="Widgets" brief="Custom class based on the QGroupBox">
                <function threadsafety="unspecified" name="GroupBox" fullname="As::GroupBox::GroupBox" href="as-groupbox.html#GroupBox" status="active" access="public" location="GroupBox.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/GroupBox.hpp" lineno="36" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GroupBox(const QString &amp;objectName, const QString &amp;title, QWidget *parent)">
                    <parameter left="const QString &amp;" right="" name="objectName" default="QString()"/>
                    <parameter left="const QString &amp;" right="" name="title" default="QString()"/>
                    <parameter left="QWidget *" right="" name="parent" default="Q_NULLPTR"/>
                </function>
                <function threadsafety="unspecified" name="setLayout" fullname="As::GroupBox::setLayout" href="as-groupbox.html#setLayout" status="active" access="public" location="GroupBox.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/GroupBox.hpp" lineno="42" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setLayout(QLayout *layout)">
                    <parameter left="QLayout *" right="" name="layout" default=""/>
                </function>
                <function threadsafety="unspecified" name="updateSettings" fullname="As::GroupBox::updateSettings" href="as-groupbox.html#updateSettings" status="active" access="private" location="GroupBox.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/GroupBox.hpp" lineno="45" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void updateSettings(const QVariant &amp;state)">
                    <parameter left="const QVariant &amp;" right="" name="state" default=""/>
                </function>
                <function threadsafety="unspecified" name="~GroupBox" fullname="As::GroupBox::~GroupBox" href="as-groupbox.html#dtor.GroupBox" status="active" access="public" location="GroupBox.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/GroupBox.hpp" lineno="40" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~GroupBox()"/>
            </class>
            <class threadsafety="unspecified" name="HBoxLayout" fullname="As::HBoxLayout" href="as-hboxlayout.html" status="active" access="public" location="HBoxLayout.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/HBoxLayout.hpp" lineno="28" module="Widgets" groups="Widgets" brief="Custom class based on the QHBoxLayout">
                <function threadsafety="unspecified" name="HBoxLayout" fullname="As::HBoxLayout::HBoxLayout" href="as-hboxlayout.html#HBoxLayout" status="active" access="public" location="HBoxLayout.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/HBoxLayout.hpp" lineno="32" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HBoxLayout(QWidget *parent)">
                    <parameter left="QWidget *" right="" name="parent" default="Q_NULLPTR"/>
                </function>
                <function threadsafety="unspecified" name="~HBoxLayout" fullname="As::HBoxLayout::~HBoxLayout" href="as-hboxlayout.html#dtor.HBoxLayout" status="active" access="public" location="HBoxLayout.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/HBoxLayout.hpp" lineno="34" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~HBoxLayout()"/>
            </class>
            <class threadsafety="unspecified" name="Label" fullname="As::Label" href="as-label.html" status="active" access="public" location="Label.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/Label.hpp" lineno="30" module="Widgets" groups="Widgets" brief="Custom class based on the QLabel">
                <function threadsafety="unspecified" name="Label" fullname="As::Label::Label" href="as-label.html#Label" status="active" access="public" location="Label.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/Label.hpp" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Label(QWidget *parent)">
                    <parameter left="QWidget *" right="" name="parent" default="Q_NULLPTR"/>
                </function>
                <function threadsafety="unspecified" name="~Label" fullname="As::Label::~Label" href="as-label.html#dtor.Label" status="active" access="public" location="Label.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/Label.hpp" lineno="36" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Label()"/>
            </class>
            <class threadsafety="unspecified" name="LabelQuatroBlock" fullname="As::LabelQuatroBlock" href="as-labelquatroblock.html" status="active" access="public" location="LabelQuatroBlock.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/LabelQuatroBlock.hpp" lineno="30" module="Widgets" groups="Widgets" brief="Block for side bar">
                <function threadsafety="unspecified" name="LabelQuatroBlock" fullname="As::LabelQuatroBlock::LabelQuatroBlock" href="as-labelquatroblock.html#LabelQuatroBlock" status="active" access="public" location="LabelQuatroBlock.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/LabelQuatroBlock.hpp" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="LabelQuatroBlock(QLabel *label, QLabel *value, QLabel *range, QLabel *step, QWidget *parent)">
                    <parameter left="QLabel *" right="" name="label" default=""/>
                    <parameter left="QLabel *" right="" name="value" default=""/>
                    <parameter left="QLabel *" right="" name="range" default=""/>
                    <parameter left="QLabel *" right="" name="step" default=""/>
                    <parameter left="QWidget *" right="" name="parent" default="Q_NULLPTR"/>
                </function>
                <function threadsafety="unspecified" name="~LabelQuatroBlock" fullname="As::LabelQuatroBlock::~LabelQuatroBlock" href="as-labelquatroblock.html#dtor.LabelQuatroBlock" status="active" access="public" location="LabelQuatroBlock.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/LabelQuatroBlock.hpp" lineno="40" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~LabelQuatroBlock()"/>
            </class>
            <class threadsafety="unspecified" name="LabelTripleBlock" fullname="As::LabelTripleBlock" href="as-labeltripleblock.html" status="active" access="public" location="LabelTripleBlock.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/LabelTripleBlock.hpp" lineno="30" module="Widgets" groups="Widgets" brief="Block for side bar">
                <function threadsafety="unspecified" name="LabelTripleBlock" fullname="As::LabelTripleBlock::LabelTripleBlock" href="as-labeltripleblock.html#LabelTripleBlock" status="active" access="public" location="LabelTripleBlock.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/LabelTripleBlock.hpp" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="LabelTripleBlock(QLabel *label, QLabel *data, QLabel *units, QWidget *parent)">
                    <parameter left="QLabel *" right="" name="label" default=""/>
                    <parameter left="QLabel *" right="" name="data" default=""/>
                    <parameter left="QLabel *" right="" name="units" default=""/>
                    <parameter left="QWidget *" right="" name="parent" default="Q_NULLPTR"/>
                </function>
                <function threadsafety="unspecified" name="~LabelTripleBlock" fullname="As::LabelTripleBlock::~LabelTripleBlock" href="as-labeltripleblock.html#dtor.LabelTripleBlock" status="active" access="public" location="LabelTripleBlock.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/LabelTripleBlock.hpp" lineno="39" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~LabelTripleBlock()"/>
            </class>
            <class threadsafety="unspecified" name="LineEdit" fullname="As::LineEdit" href="as-lineedit.html" status="active" access="public" location="LineEdit.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/LineEdit.hpp" lineno="28" module="Widgets" groups="Widgets" brief="Custom class based on the QLineEdit">
                <function threadsafety="unspecified" name="LineEdit" fullname="As::LineEdit::LineEdit" href="as-lineedit.html#LineEdit" status="active" access="public" location="LineEdit.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/LineEdit.hpp" lineno="32" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="LineEdit(QWidget *parent)">
                    <parameter left="QWidget *" right="" name="parent" default="Q_NULLPTR"/>
                </function>
                <function threadsafety="unspecified" name="~LineEdit" fullname="As::LineEdit::~LineEdit" href="as-lineedit.html#dtor.LineEdit" status="active" access="public" location="LineEdit.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/LineEdit.hpp" lineno="34" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~LineEdit()"/>
            </class>
            <class threadsafety="unspecified" name="MessageWidget" fullname="As::MessageWidget" href="as-messagewidget.html" status="active" access="public" location="MessageWidget.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/MessageWidget.hpp" lineno="30" module="Widgets" groups="Widgets" brief="Custom class based on the QDialog">
                <function threadsafety="unspecified" name="MessageWidget" fullname="As::MessageWidget::MessageWidget" href="as-messagewidget.html#MessageWidget" status="active" access="public" location="MessageWidget.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/MessageWidget.hpp" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MessageWidget(QWidget *parent, const QString &amp;title, const QString &amp;text, const QString &amp;okButton, const QString &amp;cancelButton)">
                    <parameter left="QWidget *" right="" name="parent" default="Q_NULLPTR"/>
                    <parameter left="const QString &amp;" right="" name="title" default="QString()"/>
                    <parameter left="const QString &amp;" right="" name="text" default="QString()"/>
                    <parameter left="const QString &amp;" right="" name="okButton" default="QString()"/>
                    <parameter left="const QString &amp;" right="" name="cancelButton" default="QString()"/>
                </function>
                <function threadsafety="unspecified" name="~MessageWidget" fullname="As::MessageWidget::~MessageWidget" href="as-messagewidget.html#dtor.MessageWidget" status="active" access="public" location="MessageWidget.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/MessageWidget.hpp" lineno="40" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~MessageWidget()"/>
            </class>
            <class threadsafety="unspecified" name="ProgressBar" fullname="As::ProgressBar" href="as-progressbar.html" status="active" access="public" location="ProgressBar.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/ProgressBar.hpp" lineno="29" module="Widgets" groups="Widgets" brief="Custom class based on the QProgressBar">
                <function threadsafety="unspecified" name="ProgressBar" fullname="As::ProgressBar::ProgressBar" href="as-progressbar.html#ProgressBar" status="active" access="public" location="ProgressBar.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/ProgressBar.hpp" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ProgressBar(QWidget *parent)">
                    <parameter left="QWidget *" right="" name="parent" default="Q_NULLPTR"/>
                </function>
                <function threadsafety="unspecified" name="hideOrShow" fullname="As::ProgressBar::hideOrShow" href="as-progressbar.html#hideOrShow" status="active" access="public" location="ProgressBar.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/ProgressBar.hpp" lineno="39" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void hideOrShow(const int index)">
                    <parameter left="const int" right="" name="index" default=""/>
                </function>
                <function threadsafety="unspecified" name="~ProgressBar" fullname="As::ProgressBar::~ProgressBar" href="as-progressbar.html#dtor.ProgressBar" status="active" access="public" location="ProgressBar.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/ProgressBar.hpp" lineno="36" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~ProgressBar()"/>
            </class>
            <class threadsafety="unspecified" name="PushButton" fullname="As::PushButton" href="as-pushbutton.html" status="active" access="public" location="PushButton.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/PushButton.hpp" lineno="30" module="Widgets" groups="Widgets" brief="Custom class based on the QPushButton">
                <function threadsafety="unspecified" name="PushButton" fullname="As::PushButton::PushButton" href="as-pushbutton.html#PushButton" status="active" access="public" location="PushButton.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/PushButton.hpp" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PushButton(const QString &amp;text, QWidget *parent)">
                    <parameter left="const QString &amp;" right="" name="text" default=""/>
                    <parameter left="QWidget *" right="" name="parent" default="Q_NULLPTR"/>
                </function>
                <function threadsafety="unspecified" name="~PushButton" fullname="As::PushButton::~PushButton" href="as-pushbutton.html#dtor.PushButton" status="active" access="public" location="PushButton.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/PushButton.hpp" lineno="37" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~PushButton()"/>
            </class>
            <class threadsafety="unspecified" name="SpaceObject" fullname="As::SpaceObject" href="as-spaceobject.html" status="active" access="public" location="SpaceObject.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/SpaceObject.hpp" lineno="28" module="Widgets" groups="Widgets" brief="Empty space object">
                <function threadsafety="unspecified" name="SpaceObject" fullname="As::SpaceObject::SpaceObject" href="as-spaceobject.html#SpaceObject" status="active" access="public" location="SpaceObject.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/SpaceObject.hpp" lineno="32" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SpaceObject(QWidget *parent)">
                    <parameter left="QWidget *" right="" name="parent" default="Q_NULLPTR"/>
                </function>
                <function threadsafety="unspecified" name="~SpaceObject" fullname="As::SpaceObject::~SpaceObject" href="as-spaceobject.html#dtor.SpaceObject" status="active" access="public" location="SpaceObject.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/SpaceObject.hpp" lineno="34" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~SpaceObject()"/>
            </class>
            <class threadsafety="unspecified" name="SpinBox" fullname="As::SpinBox" href="as-spinbox.html" status="active" access="public" location="SpinBox.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/SpinBox.hpp" lineno="28" module="Widgets" groups="Widgets" brief="Custom class based on the QSpinBox">
                <function threadsafety="unspecified" name="SpinBox" fullname="As::SpinBox::SpinBox" href="as-spinbox.html#SpinBox" status="active" access="public" location="SpinBox.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/SpinBox.hpp" lineno="32" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SpinBox(QWidget *parent)">
                    <parameter left="QWidget *" right="" name="parent" default="Q_NULLPTR"/>
                </function>
                <function threadsafety="unspecified" name="setMaximumSilently" fullname="As::SpinBox::setMaximumSilently" href="as-spinbox.html#setMaximumSilently" status="active" access="public" location="SpinBox.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/SpinBox.hpp" lineno="39" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setMaximumSilently(const int value)">
                    <parameter left="const int" right="" name="value" default=""/>
                </function>
                <function threadsafety="unspecified" name="setMinimumSilently" fullname="As::SpinBox::setMinimumSilently" href="as-spinbox.html#setMinimumSilently" status="active" access="public" location="SpinBox.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/SpinBox.hpp" lineno="38" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setMinimumSilently(const int value)">
                    <parameter left="const int" right="" name="value" default=""/>
                </function>
                <function threadsafety="unspecified" name="setRangeSilently" fullname="As::SpinBox::setRangeSilently" href="as-spinbox.html#setRangeSilently" status="active" access="public" location="SpinBox.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/SpinBox.hpp" lineno="36" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setRangeSilently(const int minimum, const int maximum)">
                    <parameter left="const int" right="" name="minimum" default=""/>
                    <parameter left="const int" right="" name="maximum" default=""/>
                </function>
                <function threadsafety="unspecified" name="setValueSilently" fullname="As::SpinBox::setValueSilently" href="as-spinbox.html#setValueSilently" status="active" access="public" location="SpinBox.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/SpinBox.hpp" lineno="40" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setValueSilently(const int value)">
                    <parameter left="const int" right="" name="value" default=""/>
                </function>
                <function threadsafety="unspecified" name="~SpinBox" fullname="As::SpinBox::~SpinBox" href="as-spinbox.html#dtor.SpinBox" status="active" access="public" location="SpinBox.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/SpinBox.hpp" lineno="33" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~SpinBox()"/>
            </class>
            <class threadsafety="unspecified" name="SpinBoxDoubleBlock" fullname="As::SpinBoxDoubleBlock" href="as-spinboxdoubleblock.html" status="active" access="public" location="SpinBoxDoubleBlock.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/SpinBoxDoubleBlock.hpp" lineno="33" module="Widgets" groups="Widgets" brief="Block for side bar">
                <function threadsafety="unspecified" name="SpinBoxDoubleBlock" fullname="As::SpinBoxDoubleBlock::SpinBoxDoubleBlock" href="as-spinboxdoubleblock.html#SpinBoxDoubleBlock" status="active" access="public" location="SpinBoxDoubleBlock.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/SpinBoxDoubleBlock.hpp" lineno="37" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SpinBoxDoubleBlock(As::SpinBox *leftChanger, As::Label *middleText, As::SpinBox *rightChanger, const QString &amp;nameLeft, const QString &amp;nameMiddle, const QString &amp;nameRight, QWidget *parent)">
                    <parameter left="As::SpinBox *" right="" name="leftChanger" default=""/>
                    <parameter left="As::Label *" right="" name="middleText" default=""/>
                    <parameter left="As::SpinBox *" right="" name="rightChanger" default=""/>
                    <parameter left="const QString &amp;" right="" name="nameLeft" default=""/>
                    <parameter left="const QString &amp;" right="" name="nameMiddle" default=""/>
                    <parameter left="const QString &amp;" right="" name="nameRight" default=""/>
                    <parameter left="QWidget *" right="" name="parent" default="Q_NULLPTR"/>
                </function>
                <function threadsafety="unspecified" name="~SpinBoxDoubleBlock" fullname="As::SpinBoxDoubleBlock::~SpinBoxDoubleBlock" href="as-spinboxdoubleblock.html#dtor.SpinBoxDoubleBlock" status="active" access="public" location="SpinBoxDoubleBlock.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/SpinBoxDoubleBlock.hpp" lineno="45" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~SpinBoxDoubleBlock()"/>
            </class>
            <class threadsafety="unspecified" name="SpinBoxSingleBlock" fullname="As::SpinBoxSingleBlock" href="as-spinboxsingleblock.html" status="active" access="public" location="SpinBoxSingleBlock.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/SpinBoxSingleBlock.hpp" lineno="33" module="Widgets" groups="Widgets" brief="Block for side bar">
                <function threadsafety="unspecified" name="SpinBoxSingleBlock" fullname="As::SpinBoxSingleBlock::SpinBoxSingleBlock" href="as-spinboxsingleblock.html#SpinBoxSingleBlock" status="active" access="public" location="SpinBoxSingleBlock.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/SpinBoxSingleBlock.hpp" lineno="37" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SpinBoxSingleBlock(As::SpinBox *changer, As::Label *text, const QString &amp;units, QWidget *parent)">
                    <parameter left="As::SpinBox *" right="" name="changer" default=""/>
                    <parameter left="As::Label *" right="" name="text" default=""/>
                    <parameter left="const QString &amp;" right="" name="units" default=""/>
                    <parameter left="QWidget *" right="" name="parent" default="Q_NULLPTR"/>
                </function>
                <function threadsafety="unspecified" name="~SpinBoxSingleBlock" fullname="As::SpinBoxSingleBlock::~SpinBoxSingleBlock" href="as-spinboxsingleblock.html#dtor.SpinBoxSingleBlock" status="active" access="public" location="SpinBoxSingleBlock.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/SpinBoxSingleBlock.hpp" lineno="42" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~SpinBoxSingleBlock()"/>
            </class>
            <class threadsafety="unspecified" name="TableView" fullname="As::TableView" href="as-tableview.html" status="active" access="public" location="TableView.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/TableView.hpp" lineno="30" module="Widgets" groups="Widgets" brief="Custom class based on the QTableView">
                <function threadsafety="unspecified" name="TableView" fullname="As::TableView::TableView" href="as-tableview.html#TableView" status="active" access="public" location="TableView.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/TableView.hpp" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="TableView(QWidget *parent)">
                    <parameter left="QWidget *" right="" name="parent" default="Q_NULLPTR"/>
                </function>
                <function threadsafety="unspecified" name="setModel" fullname="As::TableView::setModel" href="as-tableview.html#setModel" status="active" access="public" location="TableView.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/TableView.hpp" lineno="39" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setModel(QAbstractItemModel *model)">
                    <parameter left="QAbstractItemModel *" right="" name="model" default=""/>
                </function>
                <function threadsafety="unspecified" name="~TableView" fullname="As::TableView::~TableView" href="as-tableview.html#dtor.TableView" status="active" access="public" location="TableView.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/TableView.hpp" lineno="36" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~TableView()"/>
            </class>
            <class threadsafety="unspecified" name="ToolBarButton" fullname="As::ToolBarButton" href="as-toolbarbutton.html" status="active" access="public" location="ToolBarButton.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/ToolBarButton.hpp" lineno="30" module="Widgets" groups="Widgets" brief="Button for tool bar">
                <function threadsafety="unspecified" name="ToolBarButton" fullname="As::ToolBarButton::ToolBarButton" href="as-toolbarbutton.html#ToolBarButton" status="active" access="public" location="ToolBarButton.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/ToolBarButton.hpp" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ToolBarButton(QAction *action, QWidget *parent)">
                    <parameter left="QAction *" right="" name="action" default=""/>
                    <parameter left="QWidget *" right="" name="parent" default="Q_NULLPTR"/>
                </function>
                <function threadsafety="unspecified" name="~ToolBarButton" fullname="As::ToolBarButton::~ToolBarButton" href="as-toolbarbutton.html#dtor.ToolBarButton" status="active" access="public" location="ToolBarButton.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/ToolBarButton.hpp" lineno="37" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~ToolBarButton()"/>
            </class>
            <class threadsafety="unspecified" name="ToolBarSpacer" fullname="As::ToolBarSpacer" href="as-toolbarspacer.html" status="active" access="public" location="ToolBarSpacer.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/ToolBarSpacer.hpp" lineno="28" module="Widgets" groups="Widgets" brief="Spacer for tool bar">
                <function threadsafety="unspecified" name="ToolBarSpacer" fullname="As::ToolBarSpacer::ToolBarSpacer" href="as-toolbarspacer.html#ToolBarSpacer" status="active" access="public" location="ToolBarSpacer.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/ToolBarSpacer.hpp" lineno="32" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ToolBarSpacer(QWidget *parent)">
                    <parameter left="QWidget *" right="" name="parent" default="Q_NULLPTR"/>
                </function>
                <function threadsafety="unspecified" name="~ToolBarSpacer" fullname="As::ToolBarSpacer::~ToolBarSpacer" href="as-toolbarspacer.html#dtor.ToolBarSpacer" status="active" access="public" location="ToolBarSpacer.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/ToolBarSpacer.hpp" lineno="34" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~ToolBarSpacer()"/>
            </class>
            <class threadsafety="unspecified" name="ToolButton" fullname="As::ToolButton" href="as-toolbutton.html" status="active" access="public" location="ToolButton.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/ToolButton.hpp" lineno="30" module="Widgets" groups="Widgets" brief="Custom class based on the QToolButton">
                <function threadsafety="unspecified" name="ToolButton" fullname="As::ToolButton::ToolButton" href="as-toolbutton.html#ToolButton" status="active" access="public" location="ToolButton.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/ToolButton.hpp" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ToolButton(const QString &amp;text, QWidget *parent)">
                    <parameter left="const QString &amp;" right="" name="text" default=""/>
                    <parameter left="QWidget *" right="" name="parent" default="Q_NULLPTR"/>
                </function>
                <function threadsafety="unspecified" name="~ToolButton" fullname="As::ToolButton::~ToolButton" href="as-toolbutton.html#dtor.ToolButton" status="active" access="public" location="ToolButton.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/ToolButton.hpp" lineno="37" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~ToolButton()"/>
            </class>
            <class threadsafety="unspecified" name="UnderLabeledWidget" fullname="As::UnderLabeledWidget" href="as-underlabeledwidget.html" status="active" access="public" location="UnderLabeledWidget.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/UnderLabeledWidget.hpp" lineno="30" module="Widgets" groups="Widgets" brief="Widget with a text label below it for tool bar">
                <function threadsafety="unspecified" name="UnderLabeledWidget" fullname="As::UnderLabeledWidget::UnderLabeledWidget" href="as-underlabeledwidget.html#UnderLabeledWidget" status="active" access="public" location="UnderLabeledWidget.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/UnderLabeledWidget.hpp" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="UnderLabeledWidget(QWidget *widget, const QString &amp;text, QWidget *parent)">
                    <parameter left="QWidget *" right="" name="widget" default=""/>
                    <parameter left="const QString &amp;" right="" name="text" default=""/>
                    <parameter left="QWidget *" right="" name="parent" default="Q_NULLPTR"/>
                </function>
                <function threadsafety="unspecified" name="~UnderLabeledWidget" fullname="As::UnderLabeledWidget::~UnderLabeledWidget" href="as-underlabeledwidget.html#dtor.UnderLabeledWidget" status="active" access="public" location="UnderLabeledWidget.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/UnderLabeledWidget.hpp" lineno="38" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~UnderLabeledWidget()"/>
            </class>
            <class threadsafety="unspecified" name="VBoxLayout" fullname="As::VBoxLayout" href="as-vboxlayout.html" status="active" access="public" location="VBoxLayout.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/VBoxLayout.hpp" lineno="28" module="Widgets" groups="Widgets" brief="Custom class based on the QVBoxLayout">
                <function threadsafety="unspecified" name="VBoxLayout" fullname="As::VBoxLayout::VBoxLayout" href="as-vboxlayout.html#VBoxLayout" status="active" access="public" location="VBoxLayout.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/VBoxLayout.hpp" lineno="32" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="VBoxLayout(QWidget *parent)">
                    <parameter left="QWidget *" right="" name="parent" default="Q_NULLPTR"/>
                </function>
                <function threadsafety="unspecified" name="~VBoxLayout" fullname="As::VBoxLayout::~VBoxLayout" href="as-vboxlayout.html#dtor.VBoxLayout" status="active" access="public" location="VBoxLayout.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/VBoxLayout.hpp" lineno="34" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~VBoxLayout()"/>
            </class>
        </namespace>
        <function threadsafety="unspecified" name="ADEBUG" href="as.html#ADEBUG" status="active" access="public" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" relates="As" type="" signature="ADEBUG()"/>
        <function threadsafety="unspecified" name="ADESTROYED" href="as.html#ADESTROYED" status="active" access="public" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" relates="As" type="" signature="ADESTROYED()"/>
        <function threadsafety="unspecified" name="AEXIT" href="as.html#AEXIT" status="active" access="public" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" relates="As" type="" signature="AEXIT()"/>
        <function threadsafety="unspecified" name="AFUNC" href="as.html#AFUNC" status="active" access="public" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" relates="As" type="" signature="AFUNC()"/>
        <function threadsafety="unspecified" name="AND" href="as.html#AND" status="active" access="public" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" relates="As" type="" signature="AND()"/>
        <function threadsafety="unspecified" name="EI" href="as.html#EI" status="active" access="public" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" relates="As" type="" signature="EI()"/>
        <function threadsafety="unspecified" name="EL" href="as.html#EL" status="active" access="public" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" relates="As" type="" signature="EL()"/>
        <function threadsafety="unspecified" name="IF" href="as.html#IF" status="active" access="public" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" relates="As" type="" signature="IF()"/>
        <function threadsafety="unspecified" name="IS_DEBUG" href="as.html#IS_DEBUG" status="active" access="public" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" relates="As" type="" signature="IS_DEBUG()"/>
        <function threadsafety="unspecified" name="OR" href="as.html#OR" status="active" access="public" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" relates="As" type="" signature="OR()"/>
        <function threadsafety="unspecified" name="operator&lt;&lt;" status="internal" access="private" location="RealArray.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealArray.hpp" lineno="68" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QDebug" signature="QDebug operator&lt;&lt;(QDebug debug, const As::RealArray &amp;other)">
            <parameter left="QDebug" right="" name="debug" default=""/>
            <parameter left="const As::RealArray &amp;" right="" name="other" default=""/>
        </function>
        <function threadsafety="unspecified" name="operator&lt;&lt;" status="internal" access="private" location="RealMatrix9.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealMatrix9.hpp" lineno="56" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QDebug" signature="QDebug operator&lt;&lt;(QDebug debug, const As::RealMatrix9 &amp;other)">
            <parameter left="QDebug" right="" name="debug" default=""/>
            <parameter left="const As::RealMatrix9 &amp;" right="" name="other" default=""/>
        </function>
        <function threadsafety="unspecified" name="operator&lt;&lt;" status="internal" access="private" location="RealVector.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/RealVector.hpp" lineno="67" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QDebug" signature="QDebug operator&lt;&lt;(QDebug debug, const As::RealVector &amp;other)">
            <parameter left="QDebug" right="" name="debug" default=""/>
            <parameter left="const As::RealVector &amp;" right="" name="other" default=""/>
        </function>
        <function threadsafety="unspecified" name="operator&lt;&lt;" status="internal" access="private" location="Scan.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Scan.hpp" lineno="173" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QDebug" signature="QDebug operator&lt;&lt;(QDebug debug, const As::Scan &amp;scan)">
            <parameter left="QDebug" right="" name="debug" default=""/>
            <parameter left="const As::Scan &amp;" right="" name="scan" default=""/>
        </function>
        <function threadsafety="unspecified" name="operator&lt;&lt;" status="internal" access="private" location="String.hpp" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/String.hpp" lineno="58" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QDebug" signature="QDebug operator&lt;&lt;(QDebug debug, const As::String &amp;string)">
            <parameter left="QDebug" right="" name="debug" default=""/>
            <parameter left="const As::String &amp;" right="" name="string" default=""/>
        </function>
        <function threadsafety="unspecified" name="SB_INT" href="as.html#SB_INT" status="active" access="public" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" relates="As" type="" signature="SB_INT()"/>
        <function threadsafety="unspecified" name="TE_INT" href="as.html#TE_INT" status="active" access="public" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" relates="As" type="" signature="TE_INT()"/>
        <group name="Widgets" href="widgets.html" status="active" location="Widgets.qdoc" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/Widgets.qdoc" lineno="12" seen="true" title="As Widgets Group" module="Davinci" members="CheckBox,ComboBox,FontComboBox,GroupBox,HBoxLayout,Label,LabelQuatroBlock,LabelTripleBlock,LineEdit,MessageWidget,ProgressBar,PushButton,SpaceObject,SpinBox,SpinBoxDoubleBlock,SpinBoxSingleBlock,TableView,ToolBarButton,ToolBarSpacer,ToolButton,UnderLabeledWidget,VBoxLayout" brief="Contains classes with the custom GUI widgets"/>
        <module name="Core" href="core-module.html" status="active" location="Core.qdoc" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Core/Core.qdoc" lineno="1" seen="true" title="As Core Module" module="Davinci" members="Color" brief="Contains the base classes, functions and constants"/>
        <module name="DataTypes" href="datatypes-module.html" status="active" location="DataTypes.qdoc" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/DataTypes/DataTypes.qdoc" lineno="1" seen="true" title="As DataTypes Module" module="Davinci" members="Line,RealArray,RealMatrix9,RealVector,String,StringParser" brief="Contains classes with the custom data types"/>
        <module name="Davinci" href="davinci-module.html" status="internal" seen="false" title="" members="As"/>
        <module name="Diffraction" href="diffraction-module.html" status="active" location="Diffraction.qdoc" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Diffraction/Diffraction.qdoc" lineno="1" seen="true" title="As Diffraction Module" module="Davinci" members="SaveHeaders,Scan,ScanArray,ScanDatabase" brief="Contains classes for the diffraction scans treatment"/>
        <module name="Widgets" href="widgets-module.html" status="active" location="Widgets.qdoc" filepath="/Users/asazonov/Developing/CrossPlatform/Qt/C++/GitHub/AndrewSazonov/Davinci/Project/Libraries/Original/Widgets/Widgets.qdoc" lineno="1" seen="true" title="As Widgets Module" module="Davinci" members="CheckBox,ComboBox,FontComboBox,GroupBox,HBoxLayout,Label,LabelQuatroBlock,LabelTripleBlock,LineEdit,MessageWidget,ProgressBar,PushButton,SpaceObject,SpinBox,SpinBoxDoubleBlock,SpinBoxSingleBlock,TableView,ToolBarButton,ToolBarSpacer,ToolButton,UnderLabeledWidget,VBoxLayout" brief="Contains classes with the custom GUI widgets"/>
    </namespace>
</INDEX>
